<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<extension xmlns="https://newrelic.com/docs/java/xsd/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="cassandra-driver-core-3Extension" version="1.0" xsi:schemaLocation="newrelic-extension extension.xsd ">
  <instrumentation metricPrefix="Custom">
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.BatchStatement$Type</className>
      <method>
        <name>values</name>
      </method>
      <method>
        <name>valueOf</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.TypeTokens</className>
      <method>
        <name>listOf</name>
        <parameters>
          <type>java.lang.Class&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>listOf</name>
        <parameters>
          <type>com.google.common.reflect.TypeToken&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>setOf</name>
        <parameters>
          <type>java.lang.Class&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>setOf</name>
        <parameters>
          <type>com.google.common.reflect.TypeToken&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>mapOf</name>
        <parameters>
          <type>java.lang.Class&lt;K&gt;</type>
          <type>java.lang.Class&lt;V&gt;</type>
        </parameters>
      </method>
      <method>
        <name>mapOf</name>
        <parameters>
          <type>com.google.common.reflect.TypeToken&lt;K&gt;</type>
          <type>com.google.common.reflect.TypeToken&lt;V&gt;</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.querybuilder.BindMarker</className>
      <method>
        <name>toString</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.querybuilder.Delete</className>
      <method>
        <name>where</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Clause</type>
        </parameters>
      </method>
      <method>
        <name>where</name>
      </method>
      <method>
        <name>onlyIf</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Clause</type>
        </parameters>
      </method>
      <method>
        <name>onlyIf</name>
      </method>
      <method>
        <name>using</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Using</type>
        </parameters>
      </method>
      <method>
        <name>using</name>
      </method>
      <method>
        <name>ifExists</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.querybuilder.Update$Where</className>
      <method>
        <name>and</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Clause</type>
        </parameters>
      </method>
      <method>
        <name>with</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Assignment</type>
        </parameters>
      </method>
      <method>
        <name>using</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Using</type>
        </parameters>
      </method>
      <method>
        <name>onlyIf</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Clause</type>
        </parameters>
      </method>
      <method>
        <name>ifExists</name>
      </method>
      <method>
        <name>toString</name>
      </method>
      <method>
        <name>hasValues</name>
      </method>
      <method>
        <name>getValues</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getRetryPolicy</name>
      </method>
      <method>
        <name>setRetryPolicy</name>
        <parameters>
          <type>com.datastax.driver.core.policies.RetryPolicy</type>
        </parameters>
      </method>
      <method>
        <name>isTracing</name>
      </method>
      <method>
        <name>disableTracing</name>
      </method>
      <method>
        <name>enableTracing</name>
      </method>
      <method>
        <name>getConsistencyLevel</name>
      </method>
      <method>
        <name>setConsistencyLevel</name>
        <parameters>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
        </parameters>
      </method>
      <method>
        <name>setForceNoValues</name>
        <parameters>
          <type>boolean</type>
        </parameters>
      </method>
      <method>
        <name>getKeyspace</name>
      </method>
      <method>
        <name>getRoutingKey</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getQueryString</name>
        <parameters>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.BatchStatement</className>
      <method>
        <name>add</name>
        <parameters>
          <type>com.datastax.driver.core.Statement</type>
        </parameters>
      </method>
      <method>
        <name>addAll</name>
        <parameters>
          <type>java.lang.Iterable&lt;?extendscom.datastax.driver.core.Statement&gt;</type>
        </parameters>
      </method>
      <method>
        <name>getStatements</name>
      </method>
      <method>
        <name>clear</name>
      </method>
      <method>
        <name>size</name>
      </method>
      <method>
        <name>requestSizeInBytes</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>setSerialConsistencyLevel</name>
        <parameters>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
        </parameters>
      </method>
      <method>
        <name>getRoutingKey</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getKeyspace</name>
      </method>
      <method>
        <name>isIdempotent</name>
      </method>
      <method>
        <name>setSerialConsistencyLevel</name>
        <parameters>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.QueryLogger$Builder</className>
      <method>
        <name>withConstantThreshold</name>
        <parameters>
          <type>long</type>
        </parameters>
      </method>
      <method>
        <name>withDynamicThreshold</name>
        <parameters>
          <type>com.datastax.driver.core.PercentileTracker</type>
          <type>double</type>
        </parameters>
      </method>
      <method>
        <name>withMaxQueryStringLength</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>withMaxParameterValueLength</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>withMaxLoggedParameters</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>build</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.utils.Bytes</className>
      <method>
        <name>toHexString</name>
        <parameters>
          <type>java.nio.ByteBuffer</type>
        </parameters>
      </method>
      <method>
        <name>toRawHexString</name>
        <parameters>
          <type>java.nio.ByteBuffer</type>
        </parameters>
      </method>
      <method>
        <name>toHexString</name>
        <parameters>
          <type>byte[]</type>
        </parameters>
      </method>
      <method>
        <name>fromHexString</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getArray</name>
        <parameters>
          <type>java.nio.ByteBuffer</type>
        </parameters>
      </method>
      <method>
        <name>fromRawHexString</name>
        <parameters>
          <type>java.lang.String</type>
          <type>int</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.LocalDate</className>
      <method>
        <name>fromDaysSinceEpoch</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>fromMillisSinceEpoch</name>
        <parameters>
          <type>long</type>
        </parameters>
      </method>
      <method>
        <name>fromYearMonthDay</name>
        <parameters>
          <type>int</type>
          <type>int</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getDaysSinceEpoch</name>
      </method>
      <method>
        <name>getMillisSinceEpoch</name>
      </method>
      <method>
        <name>getYear</name>
      </method>
      <method>
        <name>getMonth</name>
      </method>
      <method>
        <name>getDay</name>
      </method>
      <method>
        <name>add</name>
        <parameters>
          <type>int</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>hashCode</name>
      </method>
      <method>
        <name>toString</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.SniSSLOptions$Builder</className>
      <method>
        <name>withSSLContext</name>
        <parameters>
          <type>javax.net.ssl.SSLContext</type>
        </parameters>
      </method>
      <method>
        <name>withCipherSuites</name>
        <parameters>
          <type>java.lang.String[]</type>
        </parameters>
      </method>
      <method>
        <name>build</name>
      </method>
      <method>
        <name>build</name>
      </method>
      <method>
        <name>withCipherSuites</name>
        <parameters>
          <type>java.lang.String[]</type>
        </parameters>
      </method>
      <method>
        <name>withSSLContext</name>
        <parameters>
          <type>javax.net.ssl.SSLContext</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.WriteFailureException</className>
      <method>
        <name>getWriteType</name>
      </method>
      <method>
        <name>getFailures</name>
      </method>
      <method>
        <name>getFailuresMap</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
        <parameters>
          <type>com.datastax.driver.core.EndPoint</type>
        </parameters>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.CodecNotFoundException</className>
      <method>
        <name>getCqlType</name>
      </method>
      <method>
        <name>getJavaType</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.FallthroughRetryPolicy</className>
      <method>
        <name>onReadTimeout</name>
        <parameters>
          <type>com.datastax.driver.core.Statement</type>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
          <type>int</type>
          <type>int</type>
          <type>boolean</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>onWriteTimeout</name>
        <parameters>
          <type>com.datastax.driver.core.Statement</type>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
          <type>com.datastax.driver.core.WriteType</type>
          <type>int</type>
          <type>int</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>onUnavailable</name>
        <parameters>
          <type>com.datastax.driver.core.Statement</type>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
          <type>int</type>
          <type>int</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>onRequestError</name>
        <parameters>
          <type>com.datastax.driver.core.Statement</type>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
          <type>com.datastax.driver.core.exceptions.DriverException</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>init</name>
        <parameters>
          <type>com.datastax.driver.core.Cluster</type>
        </parameters>
      </method>
      <method>
        <name>close</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.ConstantSpeculativeExecutionPolicy</className>
      <method>
        <name>newPlan</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.Statement</type>
        </parameters>
      </method>
      <method>
        <name>init</name>
        <parameters>
          <type>com.datastax.driver.core.Cluster</type>
        </parameters>
      </method>
      <method>
        <name>close</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.IdentityTranslator</className>
      <method>
        <name>init</name>
        <parameters>
          <type>com.datastax.driver.core.Cluster</type>
        </parameters>
      </method>
      <method>
        <name>translate</name>
        <parameters>
          <type>java.net.InetSocketAddress</type>
        </parameters>
      </method>
      <method>
        <name>close</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.DCAwareRoundRobinPolicy$Builder</className>
      <method>
        <name>withLocalDc</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>withUsedHostsPerRemoteDc</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>allowRemoteDCsForLocalConsistencyLevel</name>
      </method>
      <method>
        <name>build</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.ConstantReconnectionPolicy</className>
      <method>
        <name>getConstantDelayMs</name>
      </method>
      <method>
        <name>newSchedule</name>
      </method>
      <method>
        <name>init</name>
        <parameters>
          <type>com.datastax.driver.core.Cluster</type>
        </parameters>
      </method>
      <method>
        <name>close</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.UDTValue</className>
      <method>
        <name>getType</name>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>hashCode</name>
      </method>
      <method>
        <name>toString</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.TokenRange</className>
      <method>
        <name>getStart</name>
      </method>
      <method>
        <name>getEnd</name>
      </method>
      <method>
        <name>splitEvenly</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>isEmpty</name>
      </method>
      <method>
        <name>isWrappedAround</name>
      </method>
      <method>
        <name>unwrap</name>
      </method>
      <method>
        <name>intersects</name>
        <parameters>
          <type>com.datastax.driver.core.TokenRange</type>
        </parameters>
      </method>
      <method>
        <name>intersectWith</name>
        <parameters>
          <type>com.datastax.driver.core.TokenRange</type>
        </parameters>
      </method>
      <method>
        <name>contains</name>
        <parameters>
          <type>com.datastax.driver.core.Token</type>
        </parameters>
      </method>
      <method>
        <name>mergeWith</name>
        <parameters>
          <type>com.datastax.driver.core.TokenRange</type>
        </parameters>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>hashCode</name>
      </method>
      <method>
        <name>toString</name>
      </method>
      <method>
        <name>compareTo</name>
        <parameters>
          <type>com.datastax.driver.core.TokenRange</type>
        </parameters>
      </method>
      <method>
        <name>compareTo</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.Configuration$Builder</className>
      <method>
        <name>withPolicies</name>
        <parameters>
          <type>com.datastax.driver.core.policies.Policies</type>
        </parameters>
      </method>
      <method>
        <name>withProtocolOptions</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolOptions</type>
        </parameters>
      </method>
      <method>
        <name>withPoolingOptions</name>
        <parameters>
          <type>com.datastax.driver.core.PoolingOptions</type>
        </parameters>
      </method>
      <method>
        <name>withSocketOptions</name>
        <parameters>
          <type>com.datastax.driver.core.SocketOptions</type>
        </parameters>
      </method>
      <method>
        <name>withMetricsOptions</name>
        <parameters>
          <type>com.datastax.driver.core.MetricsOptions</type>
        </parameters>
      </method>
      <method>
        <name>withQueryOptions</name>
        <parameters>
          <type>com.datastax.driver.core.QueryOptions</type>
        </parameters>
      </method>
      <method>
        <name>withThreadingOptions</name>
        <parameters>
          <type>com.datastax.driver.core.ThreadingOptions</type>
        </parameters>
      </method>
      <method>
        <name>withNettyOptions</name>
        <parameters>
          <type>com.datastax.driver.core.NettyOptions</type>
        </parameters>
      </method>
      <method>
        <name>withCodecRegistry</name>
        <parameters>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>withDefaultKeyspace</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>build</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.SniSSLOptions</className>
      <method>
        <name>newSSLHandler</name>
        <parameters>
          <type>io.netty.channel.socket.SocketChannel</type>
        </parameters>
      </method>
      <method>
        <name>newSSLHandler</name>
        <parameters>
          <type>io.netty.channel.socket.SocketChannel</type>
          <type>com.datastax.driver.core.EndPoint</type>
        </parameters>
      </method>
      <method>
        <name>newSSLHandler</name>
        <parameters>
          <type>io.netty.channel.socket.SocketChannel</type>
          <type>java.net.InetSocketAddress</type>
        </parameters>
      </method>
      <method>
        <name>builder</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.Duration</className>
      <method>
        <name>newInstance</name>
        <parameters>
          <type>int</type>
          <type>int</type>
          <type>long</type>
        </parameters>
      </method>
      <method>
        <name>from</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getMonths</name>
      </method>
      <method>
        <name>getDays</name>
      </method>
      <method>
        <name>getNanoseconds</name>
      </method>
      <method>
        <name>hashCode</name>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>toString</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.ThreadingOptions</className>
      <method>
        <name>createThreadFactory</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>createExecutor</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>createBlockingExecutor</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>createReconnectionExecutor</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>createScheduledTasksExecutor</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>createReaperExecutor</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.TableOptions$ReadRepairValue</className>
      <method>
        <name>values</name>
      </method>
      <method>
        <name>valueOf</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>value</name>
      </method>
      <method>
        <name>toString</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.DropKeyspace</className>
      <method>
        <name>ifExists</name>
      </method>
      <method>
        <name>buildInternal</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.SchemaBuilder$KeyCaching</className>
      <method>
        <name>values</name>
      </method>
      <method>
        <name>valueOf</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.Drop</className>
      <method>
        <name>ifExists</name>
      </method>
      <method>
        <name>buildInternal</name>
      </method>
      <method>
        <name>build</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.QueryLogger$DynamicThresholdQueryLogger</className>
      <method>
        <name>getPercentileLatencyTracker</name>
      </method>
      <method>
        <name>setPercentileLatencyTracker</name>
        <parameters>
          <type>com.datastax.driver.core.PercentileTracker</type>
        </parameters>
      </method>
      <method>
        <name>getSlowQueryLatencyThresholdPercentile</name>
      </method>
      <method>
        <name>setSlowQueryLatencyThresholdPercentile</name>
        <parameters>
          <type>double</type>
        </parameters>
      </method>
      <method>
        <name>onRegister</name>
        <parameters>
          <type>com.datastax.driver.core.Cluster</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.JdkSSLOptions</className>
      <method>
        <name>builder</name>
      </method>
      <method>
        <name>newSSLHandler</name>
        <parameters>
          <type>io.netty.channel.socket.SocketChannel</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.JdkSSLOptions$Builder</className>
      <method>
        <name>withSSLContext</name>
        <parameters>
          <type>javax.net.ssl.SSLContext</type>
        </parameters>
      </method>
      <method>
        <name>withCipherSuites</name>
        <parameters>
          <type>java.lang.String[]</type>
        </parameters>
      </method>
      <method>
        <name>build</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.querybuilder.Delete$Options</className>
      <method>
        <name>and</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Using</type>
        </parameters>
      </method>
      <method>
        <name>where</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Clause</type>
        </parameters>
      </method>
      <method>
        <name>toString</name>
      </method>
      <method>
        <name>hasValues</name>
      </method>
      <method>
        <name>getValues</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getRetryPolicy</name>
      </method>
      <method>
        <name>setRetryPolicy</name>
        <parameters>
          <type>com.datastax.driver.core.policies.RetryPolicy</type>
        </parameters>
      </method>
      <method>
        <name>isTracing</name>
      </method>
      <method>
        <name>disableTracing</name>
      </method>
      <method>
        <name>enableTracing</name>
      </method>
      <method>
        <name>getConsistencyLevel</name>
      </method>
      <method>
        <name>setConsistencyLevel</name>
        <parameters>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
        </parameters>
      </method>
      <method>
        <name>setForceNoValues</name>
        <parameters>
          <type>boolean</type>
        </parameters>
      </method>
      <method>
        <name>getKeyspace</name>
      </method>
      <method>
        <name>getRoutingKey</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getQueryString</name>
        <parameters>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.PerHostPercentileTracker$Builder</className>
      <method>
        <name>build</name>
      </method>
      <method>
        <name>build</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.ColumnDefinitions$Definition</className>
      <method>
        <name>getKeyspace</name>
      </method>
      <method>
        <name>getTable</name>
      </method>
      <method>
        <name>getName</name>
      </method>
      <method>
        <name>getType</name>
      </method>
      <method>
        <name>hashCode</name>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.SniEndPoint</className>
      <method>
        <name>resolve</name>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>hashCode</name>
      </method>
      <method>
        <name>toString</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.utils.MoreObjects</className>
      <method>
        <name>equal</name>
        <parameters>
          <type>java.lang.Object</type>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>hashCode</name>
        <parameters>
          <type>java.lang.Object...</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.FunctionExecutionException</className>
      <method>
        <name>getEndPoint</name>
      </method>
      <method>
        <name>getAddress</name>
      </method>
      <method>
        <name>getHost</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.FrameTooLongException</className>
      <method>
        <name>getStreamId</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.BusyPoolException</className>
      <method>
        <name>getEndPoint</name>
      </method>
      <method>
        <name>getAddress</name>
      </method>
      <method>
        <name>getHost</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.UnsupportedFeatureException</className>
      <method>
        <name>getCurrentVersion</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.IdempotenceAwareRetryPolicy</className>
      <method>
        <name>onReadTimeout</name>
        <parameters>
          <type>com.datastax.driver.core.Statement</type>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
          <type>int</type>
          <type>int</type>
          <type>boolean</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>onWriteTimeout</name>
        <parameters>
          <type>com.datastax.driver.core.Statement</type>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
          <type>com.datastax.driver.core.WriteType</type>
          <type>int</type>
          <type>int</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>onUnavailable</name>
        <parameters>
          <type>com.datastax.driver.core.Statement</type>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
          <type>int</type>
          <type>int</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>onRequestError</name>
        <parameters>
          <type>com.datastax.driver.core.Statement</type>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
          <type>com.datastax.driver.core.exceptions.DriverException</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>init</name>
        <parameters>
          <type>com.datastax.driver.core.Cluster</type>
        </parameters>
      </method>
      <method>
        <name>close</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.RoundRobinPolicy</className>
      <method>
        <name>init</name>
        <parameters>
          <type>com.datastax.driver.core.Cluster</type>
          <type>java.util.Collection&lt;com.datastax.driver.core.Host&gt;</type>
        </parameters>
      </method>
      <method>
        <name>distance</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>newQueryPlan</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.Statement</type>
        </parameters>
      </method>
      <method>
        <name>onUp</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>onDown</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>onAdd</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>onRemove</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>close</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.TokenAwarePolicy</className>
      <method>
        <name>getChildPolicy</name>
      </method>
      <method>
        <name>init</name>
        <parameters>
          <type>com.datastax.driver.core.Cluster</type>
          <type>java.util.Collection&lt;com.datastax.driver.core.Host&gt;</type>
        </parameters>
      </method>
      <method>
        <name>distance</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>newQueryPlan</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.Statement</type>
        </parameters>
      </method>
      <method>
        <name>onUp</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>onDown</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>onAdd</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>onRemove</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>close</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.ClusterWidePercentileTracker</className>
      <method>
        <name>onRegister</name>
        <parameters>
          <type>com.datastax.driver.core.Cluster</type>
        </parameters>
      </method>
      <method>
        <name>builder</name>
        <parameters>
          <type>long</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.CodecRegistry</className>
      <method>
        <name>register</name>
        <parameters>
          <type>com.datastax.driver.core.TypeCodec&lt;?&gt;</type>
        </parameters>
      </method>
      <method>
        <name>register</name>
        <parameters>
          <type>com.datastax.driver.core.TypeCodec&lt;?&gt;...</type>
        </parameters>
      </method>
      <method>
        <name>register</name>
        <parameters>
          <type>java.lang.Iterable&lt;?extendscom.datastax.driver.core.TypeCodec&lt;?&gt;&gt;</type>
        </parameters>
      </method>
      <method>
        <name>codecFor</name>
        <parameters>
          <type>T</type>
        </parameters>
      </method>
      <method>
        <name>codecFor</name>
        <parameters>
          <type>com.datastax.driver.core.DataType</type>
        </parameters>
      </method>
      <method>
        <name>codecFor</name>
        <parameters>
          <type>com.datastax.driver.core.DataType</type>
          <type>java.lang.Class&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>codecFor</name>
        <parameters>
          <type>com.datastax.driver.core.DataType</type>
          <type>com.google.common.reflect.TypeToken&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>codecFor</name>
        <parameters>
          <type>com.datastax.driver.core.DataType</type>
          <type>T</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.VersionNumber</className>
      <method>
        <name>parse</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getMajor</name>
      </method>
      <method>
        <name>getMinor</name>
      </method>
      <method>
        <name>getPatch</name>
      </method>
      <method>
        <name>getDSEPatch</name>
      </method>
      <method>
        <name>getPreReleaseLabels</name>
      </method>
      <method>
        <name>getBuildLabel</name>
      </method>
      <method>
        <name>nextStable</name>
      </method>
      <method>
        <name>compareTo</name>
        <parameters>
          <type>com.datastax.driver.core.VersionNumber</type>
        </parameters>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>hashCode</name>
      </method>
      <method>
        <name>toString</name>
      </method>
      <method>
        <name>compareTo</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.TupleValue</className>
      <method>
        <name>getType</name>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>hashCode</name>
      </method>
      <method>
        <name>toString</name>
      </method>
      <method>
        <name>get</name>
        <parameters>
          <type>int</type>
          <type>com.datastax.driver.core.TypeCodec</type>
        </parameters>
      </method>
      <method>
        <name>get</name>
        <parameters>
          <type>int</type>
          <type>com.google.common.reflect.TypeToken</type>
        </parameters>
      </method>
      <method>
        <name>get</name>
        <parameters>
          <type>int</type>
          <type>java.lang.Class</type>
        </parameters>
      </method>
      <method>
        <name>getObject</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getTupleValue</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getUDTValue</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getMap</name>
        <parameters>
          <type>int</type>
          <type>com.google.common.reflect.TypeToken</type>
          <type>com.google.common.reflect.TypeToken</type>
        </parameters>
      </method>
      <method>
        <name>getMap</name>
        <parameters>
          <type>int</type>
          <type>java.lang.Class</type>
          <type>java.lang.Class</type>
        </parameters>
      </method>
      <method>
        <name>getSet</name>
        <parameters>
          <type>int</type>
          <type>com.google.common.reflect.TypeToken</type>
        </parameters>
      </method>
      <method>
        <name>getSet</name>
        <parameters>
          <type>int</type>
          <type>java.lang.Class</type>
        </parameters>
      </method>
      <method>
        <name>getList</name>
        <parameters>
          <type>int</type>
          <type>com.google.common.reflect.TypeToken</type>
        </parameters>
      </method>
      <method>
        <name>getList</name>
        <parameters>
          <type>int</type>
          <type>java.lang.Class</type>
        </parameters>
      </method>
      <method>
        <name>getInet</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getUUID</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getDecimal</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getVarint</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getString</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getBytes</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getBytesUnsafe</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getDouble</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getFloat</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getTime</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getDate</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getTimestamp</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getLong</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getInt</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getShort</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getByte</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getBool</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>isNull</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.Configuration</className>
      <method>
        <name>builder</name>
      </method>
      <method>
        <name>getPolicies</name>
      </method>
      <method>
        <name>getSocketOptions</name>
      </method>
      <method>
        <name>getProtocolOptions</name>
      </method>
      <method>
        <name>getPoolingOptions</name>
      </method>
      <method>
        <name>getMetricsOptions</name>
      </method>
      <method>
        <name>getQueryOptions</name>
      </method>
      <method>
        <name>getThreadingOptions</name>
      </method>
      <method>
        <name>getNettyOptions</name>
      </method>
      <method>
        <name>getDefaultKeyspace</name>
      </method>
      <method>
        <name>getCodecRegistry</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.SocketOptions</className>
      <method>
        <name>getConnectTimeoutMillis</name>
      </method>
      <method>
        <name>setConnectTimeoutMillis</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getReadTimeoutMillis</name>
      </method>
      <method>
        <name>setReadTimeoutMillis</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getKeepAlive</name>
      </method>
      <method>
        <name>setKeepAlive</name>
        <parameters>
          <type>boolean</type>
        </parameters>
      </method>
      <method>
        <name>getReuseAddress</name>
      </method>
      <method>
        <name>setReuseAddress</name>
        <parameters>
          <type>boolean</type>
        </parameters>
      </method>
      <method>
        <name>getSoLinger</name>
      </method>
      <method>
        <name>setSoLinger</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getTcpNoDelay</name>
      </method>
      <method>
        <name>setTcpNoDelay</name>
        <parameters>
          <type>boolean</type>
        </parameters>
      </method>
      <method>
        <name>getReceiveBufferSize</name>
      </method>
      <method>
        <name>setReceiveBufferSize</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getSendBufferSize</name>
      </method>
      <method>
        <name>setSendBufferSize</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.TableOptions$AdditionalWritePolicyValue</className>
      <method>
        <name>value</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.TableOptions$CompactionOptions$LeveledCompactionStrategyOptions</className>
      <method>
        <name>ssTableSizeInMB</name>
        <parameters>
          <type>java.lang.Integer</type>
        </parameters>
      </method>
      <method>
        <name>build</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.SchemaBuilder$Caching</className>
      <method>
        <name>values</name>
      </method>
      <method>
        <name>valueOf</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.TableOptions$CompactionOptions$DateTieredCompactionStrategyOptions$TimeStampResolution</className>
      <method>
        <name>values</name>
      </method>
      <method>
        <name>valueOf</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.Alter$AddColumn</className>
      <method>
        <name>type</name>
        <parameters>
          <type>com.datastax.driver.core.DataType</type>
        </parameters>
      </method>
      <method>
        <name>udtType</name>
        <parameters>
          <type>com.datastax.driver.core.schemabuilder.UDTType</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.AlterKeyspace</className>
      <method>
        <name>with</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.TableOptions$CompactionOptions$SizeTieredCompactionStrategyOptions</className>
      <method>
        <name>bucketHigh</name>
        <parameters>
          <type>java.lang.Double</type>
        </parameters>
      </method>
      <method>
        <name>bucketLow</name>
        <parameters>
          <type>java.lang.Double</type>
        </parameters>
      </method>
      <method>
        <name>coldReadsRatioToOmit</name>
        <parameters>
          <type>java.lang.Double</type>
        </parameters>
      </method>
      <method>
        <name>minThreshold</name>
        <parameters>
          <type>java.lang.Integer</type>
        </parameters>
      </method>
      <method>
        <name>maxThreshold</name>
        <parameters>
          <type>java.lang.Integer</type>
        </parameters>
      </method>
      <method>
        <name>minSSTableSizeInBytes</name>
        <parameters>
          <type>java.lang.Long</type>
        </parameters>
      </method>
      <method>
        <name>build</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.QueryLogger$ConstantThresholdQueryLogger</className>
      <method>
        <name>getSlowQueryLatencyThresholdMillis</name>
      </method>
      <method>
        <name>setSlowQueryLatencyThresholdMillis</name>
        <parameters>
          <type>long</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.PagingState</className>
      <method>
        <name>toString</name>
      </method>
      <method>
        <name>fromString</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>toBytes</name>
      </method>
      <method>
        <name>fromBytes</name>
        <parameters>
          <type>byte[]</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.PoolingOptions</className>
      <method>
        <name>getCoreConnectionsPerHost</name>
        <parameters>
          <type>com.datastax.driver.core.HostDistance</type>
        </parameters>
      </method>
      <method>
        <name>setCoreConnectionsPerHost</name>
        <parameters>
          <type>com.datastax.driver.core.HostDistance</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getMaxConnectionsPerHost</name>
        <parameters>
          <type>com.datastax.driver.core.HostDistance</type>
        </parameters>
      </method>
      <method>
        <name>setMaxConnectionsPerHost</name>
        <parameters>
          <type>com.datastax.driver.core.HostDistance</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>setConnectionsPerHost</name>
        <parameters>
          <type>com.datastax.driver.core.HostDistance</type>
          <type>int</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getNewConnectionThreshold</name>
        <parameters>
          <type>com.datastax.driver.core.HostDistance</type>
        </parameters>
      </method>
      <method>
        <name>setNewConnectionThreshold</name>
        <parameters>
          <type>com.datastax.driver.core.HostDistance</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getMaxRequestsPerConnection</name>
        <parameters>
          <type>com.datastax.driver.core.HostDistance</type>
        </parameters>
      </method>
      <method>
        <name>setMaxRequestsPerConnection</name>
        <parameters>
          <type>com.datastax.driver.core.HostDistance</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getIdleTimeoutSeconds</name>
      </method>
      <method>
        <name>setIdleTimeoutSeconds</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getPoolTimeoutMillis</name>
      </method>
      <method>
        <name>setPoolTimeoutMillis</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getMaxQueueSize</name>
      </method>
      <method>
        <name>setMaxQueueSize</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getHeartbeatIntervalSeconds</name>
      </method>
      <method>
        <name>setHeartbeatIntervalSeconds</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getInitializationExecutor</name>
      </method>
      <method>
        <name>setInitializationExecutor</name>
        <parameters>
          <type>java.util.concurrent.Executor</type>
        </parameters>
      </method>
      <method>
        <name>refreshConnectedHosts</name>
      </method>
      <method>
        <name>refreshConnectedHost</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.querybuilder.Update</className>
      <method>
        <name>with</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Assignment</type>
        </parameters>
      </method>
      <method>
        <name>with</name>
      </method>
      <method>
        <name>where</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Clause</type>
        </parameters>
      </method>
      <method>
        <name>where</name>
      </method>
      <method>
        <name>onlyIf</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Clause</type>
        </parameters>
      </method>
      <method>
        <name>onlyIf</name>
      </method>
      <method>
        <name>using</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Using</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.querybuilder.Update$Options</className>
      <method>
        <name>and</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Using</type>
        </parameters>
      </method>
      <method>
        <name>with</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Assignment</type>
        </parameters>
      </method>
      <method>
        <name>where</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Clause</type>
        </parameters>
      </method>
      <method>
        <name>onlyIf</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Clause</type>
        </parameters>
      </method>
      <method>
        <name>toString</name>
      </method>
      <method>
        <name>hasValues</name>
      </method>
      <method>
        <name>getValues</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getRetryPolicy</name>
      </method>
      <method>
        <name>setRetryPolicy</name>
        <parameters>
          <type>com.datastax.driver.core.policies.RetryPolicy</type>
        </parameters>
      </method>
      <method>
        <name>isTracing</name>
      </method>
      <method>
        <name>disableTracing</name>
      </method>
      <method>
        <name>enableTracing</name>
      </method>
      <method>
        <name>getConsistencyLevel</name>
      </method>
      <method>
        <name>setConsistencyLevel</name>
        <parameters>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
        </parameters>
      </method>
      <method>
        <name>setForceNoValues</name>
        <parameters>
          <type>boolean</type>
        </parameters>
      </method>
      <method>
        <name>getKeyspace</name>
      </method>
      <method>
        <name>getRoutingKey</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getQueryString</name>
        <parameters>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.querybuilder.Delete$Conditions</className>
      <method>
        <name>and</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Clause</type>
        </parameters>
      </method>
      <method>
        <name>where</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Clause</type>
        </parameters>
      </method>
      <method>
        <name>using</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Using</type>
        </parameters>
      </method>
      <method>
        <name>toString</name>
      </method>
      <method>
        <name>hasValues</name>
      </method>
      <method>
        <name>getValues</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getRetryPolicy</name>
      </method>
      <method>
        <name>setRetryPolicy</name>
        <parameters>
          <type>com.datastax.driver.core.policies.RetryPolicy</type>
        </parameters>
      </method>
      <method>
        <name>isTracing</name>
      </method>
      <method>
        <name>disableTracing</name>
      </method>
      <method>
        <name>enableTracing</name>
      </method>
      <method>
        <name>getConsistencyLevel</name>
      </method>
      <method>
        <name>setConsistencyLevel</name>
        <parameters>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
        </parameters>
      </method>
      <method>
        <name>setForceNoValues</name>
        <parameters>
          <type>boolean</type>
        </parameters>
      </method>
      <method>
        <name>getKeyspace</name>
      </method>
      <method>
        <name>getRoutingKey</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getQueryString</name>
        <parameters>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.CodecUtils</className>
      <method>
        <name>pack</name>
        <parameters>
          <type>java.nio.ByteBuffer[]</type>
          <type>int</type>
          <type>com.datastax.driver.core.ProtocolVersion</type>
        </parameters>
      </method>
      <method>
        <name>readSize</name>
        <parameters>
          <type>java.nio.ByteBuffer</type>
          <type>com.datastax.driver.core.ProtocolVersion</type>
        </parameters>
      </method>
      <method>
        <name>writeSize</name>
        <parameters>
          <type>java.nio.ByteBuffer</type>
          <type>int</type>
          <type>com.datastax.driver.core.ProtocolVersion</type>
        </parameters>
      </method>
      <method>
        <name>readValue</name>
        <parameters>
          <type>java.nio.ByteBuffer</type>
          <type>com.datastax.driver.core.ProtocolVersion</type>
        </parameters>
      </method>
      <method>
        <name>writeValue</name>
        <parameters>
          <type>java.nio.ByteBuffer</type>
          <type>java.nio.ByteBuffer</type>
          <type>com.datastax.driver.core.ProtocolVersion</type>
        </parameters>
      </method>
      <method>
        <name>readBytes</name>
        <parameters>
          <type>java.nio.ByteBuffer</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>fromUnsignedToSignedInt</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>fromSignedToUnsignedInt</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>fromCqlDateToDaysSinceEpoch</name>
        <parameters>
          <type>long</type>
        </parameters>
      </method>
      <method>
        <name>fromDaysSinceEpochToCqlDate</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.NettyOptions</className>
      <method>
        <name>eventLoopGroup</name>
        <parameters>
          <type>java.util.concurrent.ThreadFactory</type>
        </parameters>
      </method>
      <method>
        <name>channelClass</name>
      </method>
      <method>
        <name>afterBootstrapInitialized</name>
        <parameters>
          <type>io.netty.bootstrap.Bootstrap</type>
        </parameters>
      </method>
      <method>
        <name>afterChannelInitialized</name>
        <parameters>
          <type>io.netty.channel.socket.SocketChannel</type>
        </parameters>
      </method>
      <method>
        <name>onClusterClose</name>
        <parameters>
          <type>io.netty.channel.EventLoopGroup</type>
        </parameters>
      </method>
      <method>
        <name>timer</name>
        <parameters>
          <type>java.util.concurrent.ThreadFactory</type>
        </parameters>
      </method>
      <method>
        <name>onClusterClose</name>
        <parameters>
          <type>io.netty.util.Timer</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.ColumnMetadata</className>
      <method>
        <name>getName</name>
      </method>
      <method>
        <name>getParent</name>
      </method>
      <method>
        <name>getType</name>
      </method>
      <method>
        <name>isStatic</name>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>hashCode</name>
      </method>
      <method>
        <name>toString</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.QueryTrace</className>
      <method>
        <name>getTraceId</name>
      </method>
      <method>
        <name>getRequestType</name>
      </method>
      <method>
        <name>getDurationMicros</name>
      </method>
      <method>
        <name>getCoordinator</name>
      </method>
      <method>
        <name>getParameters</name>
      </method>
      <method>
        <name>getStartedAt</name>
      </method>
      <method>
        <name>getEvents</name>
      </method>
      <method>
        <name>toString</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.BootstrappingException</className>
      <method>
        <name>getEndPoint</name>
      </method>
      <method>
        <name>getAddress</name>
      </method>
      <method>
        <name>getHost</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.BusyConnectionException</className>
      <method>
        <name>getEndPoint</name>
      </method>
      <method>
        <name>getAddress</name>
      </method>
      <method>
        <name>getHost</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.UnauthorizedException</className>
      <method>
        <name>getEndPoint</name>
      </method>
      <method>
        <name>getAddress</name>
      </method>
      <method>
        <name>getHost</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.TransportException</className>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.UnsupportedProtocolVersionException</className>
      <method>
        <name>getEndPoint</name>
      </method>
      <method>
        <name>getAddress</name>
      </method>
      <method>
        <name>getHost</name>
      </method>
      <method>
        <name>getServerVersion</name>
      </method>
      <method>
        <name>getUnsupportedVersion</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.LatencyAwarePolicy$Snapshot$Stats</className>
      <method>
        <name>lastUpdatedSince</name>
      </method>
      <method>
        <name>getLatencyScore</name>
      </method>
      <method>
        <name>getMeasurementsCount</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.EC2MultiRegionAddressTranslator</className>
      <method>
        <name>init</name>
        <parameters>
          <type>com.datastax.driver.core.Cluster</type>
        </parameters>
      </method>
      <method>
        <name>translate</name>
        <parameters>
          <type>java.net.InetSocketAddress</type>
        </parameters>
      </method>
      <method>
        <name>close</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.HostDistance</className>
      <method>
        <name>values</name>
      </method>
      <method>
        <name>valueOf</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.DataType$CustomType</className>
      <method>
        <name>isFrozen</name>
      </method>
      <method>
        <name>getCustomTypeClassName</name>
      </method>
      <method>
        <name>hashCode</name>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>toString</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.DataType$Name</className>
      <method>
        <name>values</name>
      </method>
      <method>
        <name>valueOf</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>isCompatibleWith</name>
        <parameters>
          <type>com.datastax.driver.core.DataType$Name</type>
        </parameters>
      </method>
      <method>
        <name>toString</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.ColumnDefinitions</className>
      <method>
        <name>size</name>
      </method>
      <method>
        <name>contains</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getIndexOf</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>iterator</name>
      </method>
      <method>
        <name>asList</name>
      </method>
      <method>
        <name>getName</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getType</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getType</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getKeyspace</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getKeyspace</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getTable</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getTable</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>toString</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.TableOptionsMetadata</className>
      <method>
        <name>isCompactStorage</name>
      </method>
      <method>
        <name>getComment</name>
      </method>
      <method>
        <name>getReadRepairChance</name>
      </method>
      <method>
        <name>getReadRepair</name>
      </method>
      <method>
        <name>getLocalReadRepairChance</name>
      </method>
      <method>
        <name>getReplicateOnWrite</name>
      </method>
      <method>
        <name>getGcGraceInSeconds</name>
      </method>
      <method>
        <name>getBloomFilterFalsePositiveChance</name>
      </method>
      <method>
        <name>getCaching</name>
      </method>
      <method>
        <name>getPopulateIOCacheOnFlush</name>
      </method>
      <method>
        <name>getMemtableFlushPeriodInMs</name>
      </method>
      <method>
        <name>getDefaultTimeToLive</name>
      </method>
      <method>
        <name>getSpeculativeRetry</name>
      </method>
      <method>
        <name>getIndexInterval</name>
      </method>
      <method>
        <name>getMinIndexInterval</name>
      </method>
      <method>
        <name>getMaxIndexInterval</name>
      </method>
      <method>
        <name>getCrcCheckChance</name>
      </method>
      <method>
        <name>getCompaction</name>
      </method>
      <method>
        <name>getCompression</name>
      </method>
      <method>
        <name>getExtensions</name>
      </method>
      <method>
        <name>isCDC</name>
      </method>
      <method>
        <name>getAdditionalWritePolicy</name>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>hashCode</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.ClusterWidePercentileTracker$Builder</className>
      <method>
        <name>build</name>
      </method>
      <method>
        <name>build</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.TableOptions$CompactionOptions$Strategy</className>
      <method>
        <name>values</name>
      </method>
      <method>
        <name>valueOf</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>strategyClass</name>
      </method>
      <method>
        <name>toString</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.TableOptions$CompactionOptions$TimeWindowCompactionStrategyOptions</className>
      <method>
        <name>bucketHigh</name>
        <parameters>
          <type>java.lang.Double</type>
        </parameters>
      </method>
      <method>
        <name>bucketLow</name>
        <parameters>
          <type>java.lang.Double</type>
        </parameters>
      </method>
      <method>
        <name>compactionWindowUnit</name>
        <parameters>
          <type>com.datastax.driver.core.schemabuilder.TableOptions$CompactionOptions$TimeWindowCompactionStrategyOptions$CompactionWindowUnit</type>
        </parameters>
      </method>
      <method>
        <name>compactionWindowSize</name>
        <parameters>
          <type>java.lang.Integer</type>
        </parameters>
      </method>
      <method>
        <name>minThreshold</name>
        <parameters>
          <type>java.lang.Integer</type>
        </parameters>
      </method>
      <method>
        <name>maxThreshold</name>
        <parameters>
          <type>java.lang.Integer</type>
        </parameters>
      </method>
      <method>
        <name>minSSTableSizeInBytes</name>
        <parameters>
          <type>java.lang.Long</type>
        </parameters>
      </method>
      <method>
        <name>timestampResolution</name>
        <parameters>
          <type>com.datastax.driver.core.schemabuilder.TableOptions$CompactionOptions$TimeWindowCompactionStrategyOptions$TimeStampResolution</type>
        </parameters>
      </method>
      <method>
        <name>unsafeAggressiveSSTableExpiration</name>
        <parameters>
          <type>java.lang.Boolean</type>
        </parameters>
      </method>
      <method>
        <name>build</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.CreateKeyspace</className>
      <method>
        <name>ifNotExists</name>
      </method>
      <method>
        <name>with</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.SchemaBuilder$Direction</className>
      <method>
        <name>values</name>
      </method>
      <method>
        <name>valueOf</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.TableOptions$CompactionOptions$DateTieredCompactionStrategyOptions</className>
      <method>
        <name>baseTimeSeconds</name>
        <parameters>
          <type>java.lang.Integer</type>
        </parameters>
      </method>
      <method>
        <name>maxSSTableAgeDays</name>
        <parameters>
          <type>java.lang.Integer</type>
        </parameters>
      </method>
      <method>
        <name>minThreshold</name>
        <parameters>
          <type>java.lang.Integer</type>
        </parameters>
      </method>
      <method>
        <name>maxThreshold</name>
        <parameters>
          <type>java.lang.Integer</type>
        </parameters>
      </method>
      <method>
        <name>timestampResolution</name>
        <parameters>
          <type>com.datastax.driver.core.schemabuilder.TableOptions$CompactionOptions$DateTieredCompactionStrategyOptions$TimeStampResolution</type>
        </parameters>
      </method>
      <method>
        <name>build</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.TableOptions$CompactionOptions$TimeWindowCompactionStrategyOptions$CompactionWindowUnit</className>
      <method>
        <name>values</name>
      </method>
      <method>
        <name>valueOf</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.RemoteEndpointAwareNettySSLOptions</className>
      <method>
        <name>newSSLHandler</name>
        <parameters>
          <type>io.netty.channel.socket.SocketChannel</type>
        </parameters>
      </method>
      <method>
        <name>newSSLHandler</name>
        <parameters>
          <type>io.netty.channel.socket.SocketChannel</type>
          <type>com.datastax.driver.core.EndPoint</type>
        </parameters>
      </method>
      <method>
        <name>newSSLHandler</name>
        <parameters>
          <type>io.netty.channel.socket.SocketChannel</type>
          <type>java.net.InetSocketAddress</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.ServerSideTimestampGenerator</className>
      <method>
        <name>next</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.MaterializedViewMetadata</className>
      <method>
        <name>getBaseTable</name>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>hashCode</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.Metadata</className>
      <method>
        <name>quoteIfNecessary</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>quote</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>isReservedCqlKeyword</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getTokenRanges</name>
      </method>
      <method>
        <name>getTokenRanges</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>getReplicas</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.nio.ByteBuffer</type>
        </parameters>
      </method>
      <method>
        <name>getReplicas</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.TokenRange</type>
        </parameters>
      </method>
      <method>
        <name>getClusterName</name>
      </method>
      <method>
        <name>getPartitioner</name>
      </method>
      <method>
        <name>getAllHosts</name>
      </method>
      <method>
        <name>checkSchemaAgreement</name>
      </method>
      <method>
        <name>getKeyspace</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getKeyspaces</name>
      </method>
      <method>
        <name>exportSchemaAsString</name>
      </method>
      <method>
        <name>newTupleType</name>
        <parameters>
          <type>com.datastax.driver.core.DataType...</type>
        </parameters>
      </method>
      <method>
        <name>newTupleType</name>
        <parameters>
          <type>java.util.List&lt;com.datastax.driver.core.DataType&gt;</type>
        </parameters>
      </method>
      <method>
        <name>newToken</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>newToken</name>
        <parameters>
          <type>java.nio.ByteBuffer...</type>
        </parameters>
      </method>
      <method>
        <name>newTokenRange</name>
        <parameters>
          <type>com.datastax.driver.core.Token</type>
          <type>com.datastax.driver.core.Token</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.querybuilder.Select$Where</className>
      <method>
        <name>and</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Clause</type>
        </parameters>
      </method>
      <method>
        <name>orderBy</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Ordering...</type>
        </parameters>
      </method>
      <method>
        <name>groupBy</name>
        <parameters>
          <type>java.lang.Object...</type>
        </parameters>
      </method>
      <method>
        <name>limit</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>limit</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.BindMarker</type>
        </parameters>
      </method>
      <method>
        <name>perPartitionLimit</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>perPartitionLimit</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.BindMarker</type>
        </parameters>
      </method>
      <method>
        <name>allowFiltering</name>
      </method>
      <method>
        <name>toString</name>
      </method>
      <method>
        <name>hasValues</name>
      </method>
      <method>
        <name>getValues</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getRetryPolicy</name>
      </method>
      <method>
        <name>setRetryPolicy</name>
        <parameters>
          <type>com.datastax.driver.core.policies.RetryPolicy</type>
        </parameters>
      </method>
      <method>
        <name>isTracing</name>
      </method>
      <method>
        <name>disableTracing</name>
      </method>
      <method>
        <name>enableTracing</name>
      </method>
      <method>
        <name>getConsistencyLevel</name>
      </method>
      <method>
        <name>setConsistencyLevel</name>
        <parameters>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
        </parameters>
      </method>
      <method>
        <name>setForceNoValues</name>
        <parameters>
          <type>boolean</type>
        </parameters>
      </method>
      <method>
        <name>getKeyspace</name>
      </method>
      <method>
        <name>getRoutingKey</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getQueryString</name>
        <parameters>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.querybuilder.Update$Assignments</className>
      <method>
        <name>and</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Assignment</type>
        </parameters>
      </method>
      <method>
        <name>where</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Clause</type>
        </parameters>
      </method>
      <method>
        <name>using</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Using</type>
        </parameters>
      </method>
      <method>
        <name>onlyIf</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Clause</type>
        </parameters>
      </method>
      <method>
        <name>toString</name>
      </method>
      <method>
        <name>hasValues</name>
      </method>
      <method>
        <name>getValues</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getRetryPolicy</name>
      </method>
      <method>
        <name>setRetryPolicy</name>
        <parameters>
          <type>com.datastax.driver.core.policies.RetryPolicy</type>
        </parameters>
      </method>
      <method>
        <name>isTracing</name>
      </method>
      <method>
        <name>disableTracing</name>
      </method>
      <method>
        <name>enableTracing</name>
      </method>
      <method>
        <name>getConsistencyLevel</name>
      </method>
      <method>
        <name>setConsistencyLevel</name>
        <parameters>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
        </parameters>
      </method>
      <method>
        <name>setForceNoValues</name>
        <parameters>
          <type>boolean</type>
        </parameters>
      </method>
      <method>
        <name>getKeyspace</name>
      </method>
      <method>
        <name>getRoutingKey</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getQueryString</name>
        <parameters>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.querybuilder.Select$Builder</className>
      <method>
        <name>distinct</name>
      </method>
      <method>
        <name>json</name>
      </method>
      <method>
        <name>from</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>from</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>from</name>
        <parameters>
          <type>com.datastax.driver.core.TableMetadata</type>
        </parameters>
      </method>
      <method>
        <name>from</name>
        <parameters>
          <type>com.datastax.driver.core.MaterializedViewMetadata</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.querybuilder.Update$IfExists</className>
      <method>
        <name>toString</name>
      </method>
      <method>
        <name>hasValues</name>
      </method>
      <method>
        <name>getValues</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getRetryPolicy</name>
      </method>
      <method>
        <name>setRetryPolicy</name>
        <parameters>
          <type>com.datastax.driver.core.policies.RetryPolicy</type>
        </parameters>
      </method>
      <method>
        <name>isTracing</name>
      </method>
      <method>
        <name>disableTracing</name>
      </method>
      <method>
        <name>enableTracing</name>
      </method>
      <method>
        <name>getConsistencyLevel</name>
      </method>
      <method>
        <name>setConsistencyLevel</name>
        <parameters>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
        </parameters>
      </method>
      <method>
        <name>setForceNoValues</name>
        <parameters>
          <type>boolean</type>
        </parameters>
      </method>
      <method>
        <name>getKeyspace</name>
      </method>
      <method>
        <name>getRoutingKey</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getQueryString</name>
        <parameters>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.querybuilder.Batch</className>
      <method>
        <name>add</name>
        <parameters>
          <type>com.datastax.driver.core.RegularStatement</type>
        </parameters>
      </method>
      <method>
        <name>getValues</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>using</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Using</type>
        </parameters>
      </method>
      <method>
        <name>getRoutingKey</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getKeyspace</name>
      </method>
      <method>
        <name>isIdempotent</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.TableMetadata</className>
      <method>
        <name>getIndex</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getIndexes</name>
      </method>
      <method>
        <name>getView</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getViews</name>
      </method>
      <method>
        <name>exportAsString</name>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>hashCode</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.PerHostPercentileTracker</className>
      <method>
        <name>builder</name>
        <parameters>
          <type>long</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.utils.MoreFutures</className>
      <method>
        <name>propagateFuture</name>
        <parameters>
          <type>com.google.common.util.concurrent.SettableFuture&lt;T&gt;</type>
          <type>com.google.common.util.concurrent.ListenableFuture&lt;T&gt;</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.ProtocolOptions</className>
      <method>
        <name>getPort</name>
      </method>
      <method>
        <name>getProtocolVersion</name>
      </method>
      <method>
        <name>getCompression</name>
      </method>
      <method>
        <name>setCompression</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolOptions$Compression</type>
        </parameters>
      </method>
      <method>
        <name>getMaxSchemaAgreementWaitSeconds</name>
      </method>
      <method>
        <name>getSSLOptions</name>
      </method>
      <method>
        <name>getAuthProvider</name>
      </method>
      <method>
        <name>isNoCompact</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.InvalidConfigurationInQueryException</className>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.UnavailableException</className>
      <method>
        <name>getConsistencyLevel</name>
      </method>
      <method>
        <name>getRequiredReplicas</name>
      </method>
      <method>
        <name>getAliveReplicas</name>
      </method>
      <method>
        <name>getEndPoint</name>
      </method>
      <method>
        <name>getAddress</name>
      </method>
      <method>
        <name>getHost</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
        <parameters>
          <type>com.datastax.driver.core.EndPoint</type>
        </parameters>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.ReadTimeoutException</className>
      <method>
        <name>wasDataRetrieved</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
        <parameters>
          <type>com.datastax.driver.core.EndPoint</type>
        </parameters>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.CrcMismatchException</className>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.TraceRetrievalException</className>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.LatencyAwarePolicy</className>
      <method>
        <name>getChildPolicy</name>
      </method>
      <method>
        <name>builder</name>
        <parameters>
          <type>com.datastax.driver.core.policies.LoadBalancingPolicy</type>
        </parameters>
      </method>
      <method>
        <name>init</name>
        <parameters>
          <type>com.datastax.driver.core.Cluster</type>
          <type>java.util.Collection&lt;com.datastax.driver.core.Host&gt;</type>
        </parameters>
      </method>
      <method>
        <name>distance</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>newQueryPlan</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.Statement</type>
        </parameters>
      </method>
      <method>
        <name>getScoresSnapshot</name>
      </method>
      <method>
        <name>onUp</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>onDown</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>onAdd</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>onRemove</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>close</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.WhiteListPolicy</className>
      <method>
        <name>ofHosts</name>
        <parameters>
          <type>com.datastax.driver.core.policies.LoadBalancingPolicy</type>
          <type>java.lang.String...</type>
        </parameters>
      </method>
      <method>
        <name>ofHosts</name>
        <parameters>
          <type>com.datastax.driver.core.policies.LoadBalancingPolicy</type>
          <type>java.lang.Iterable&lt;java.lang.String&gt;</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.Policies</className>
      <method>
        <name>builder</name>
      </method>
      <method>
        <name>defaultLoadBalancingPolicy</name>
      </method>
      <method>
        <name>defaultReconnectionPolicy</name>
      </method>
      <method>
        <name>defaultRetryPolicy</name>
      </method>
      <method>
        <name>defaultAddressTranslator</name>
      </method>
      <method>
        <name>defaultTimestampGenerator</name>
      </method>
      <method>
        <name>defaultSpeculativeExecutionPolicy</name>
      </method>
      <method>
        <name>defaultEndPointFactory</name>
      </method>
      <method>
        <name>getLoadBalancingPolicy</name>
      </method>
      <method>
        <name>getReconnectionPolicy</name>
      </method>
      <method>
        <name>getRetryPolicy</name>
      </method>
      <method>
        <name>getAddressTranslator</name>
      </method>
      <method>
        <name>getTimestampGenerator</name>
      </method>
      <method>
        <name>getSpeculativeExecutionPolicy</name>
      </method>
      <method>
        <name>getEndPointFactory</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.ErrorAwarePolicy</className>
      <method>
        <name>getChildPolicy</name>
      </method>
      <method>
        <name>init</name>
        <parameters>
          <type>com.datastax.driver.core.Cluster</type>
          <type>java.util.Collection&lt;com.datastax.driver.core.Host&gt;</type>
        </parameters>
      </method>
      <method>
        <name>distance</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>newQueryPlan</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.Statement</type>
        </parameters>
      </method>
      <method>
        <name>onAdd</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>onUp</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>onDown</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>onRemove</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>builder</name>
        <parameters>
          <type>com.datastax.driver.core.policies.LoadBalancingPolicy</type>
        </parameters>
      </method>
      <method>
        <name>close</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.ConsistencyLevel</className>
      <method>
        <name>values</name>
      </method>
      <method>
        <name>valueOf</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>isDCLocal</name>
      </method>
      <method>
        <name>isSerial</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.DataType$CollectionType</className>
      <method>
        <name>isFrozen</name>
      </method>
      <method>
        <name>getTypeArguments</name>
      </method>
      <method>
        <name>hashCode</name>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>toString</name>
      </method>
      <method>
        <name>asFunctionParameterString</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.Cluster</className>
      <method>
        <name>init</name>
      </method>
      <method>
        <name>buildFrom</name>
        <parameters>
          <type>com.datastax.driver.core.Cluster$Initializer</type>
        </parameters>
      </method>
      <method>
        <name>builder</name>
      </method>
      <method>
        <name>getDriverVersion</name>
      </method>
      <method>
        <name>logDriverVersion</name>
      </method>
      <method>
        <name>newSession</name>
      </method>
      <method>
        <name>connect</name>
      </method>
      <method>
        <name>connect</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>connectAsync</name>
      </method>
      <method>
        <name>connectAsync</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getClusterName</name>
      </method>
      <method>
        <name>getMetadata</name>
      </method>
      <method>
        <name>getConfiguration</name>
      </method>
      <method>
        <name>getMetrics</name>
      </method>
      <method>
        <name>register</name>
        <parameters>
          <type>com.datastax.driver.core.Host$StateListener</type>
        </parameters>
      </method>
      <method>
        <name>unregister</name>
        <parameters>
          <type>com.datastax.driver.core.Host$StateListener</type>
        </parameters>
      </method>
      <method>
        <name>register</name>
        <parameters>
          <type>com.datastax.driver.core.LatencyTracker</type>
        </parameters>
      </method>
      <method>
        <name>unregister</name>
        <parameters>
          <type>com.datastax.driver.core.LatencyTracker</type>
        </parameters>
      </method>
      <method>
        <name>register</name>
        <parameters>
          <type>com.datastax.driver.core.SchemaChangeListener</type>
        </parameters>
      </method>
      <method>
        <name>unregister</name>
        <parameters>
          <type>com.datastax.driver.core.SchemaChangeListener</type>
        </parameters>
      </method>
      <method>
        <name>closeAsync</name>
      </method>
      <method>
        <name>close</name>
      </method>
      <method>
        <name>isClosed</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.IndexMetadata$Kind</className>
      <method>
        <name>values</name>
      </method>
      <method>
        <name>valueOf</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.CreateIndex$CreateIndexOn</className>
      <method>
        <name>andColumn</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>andKeysOfColumn</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.CreateIndex</className>
      <method>
        <name>ifNotExists</name>
      </method>
      <method>
        <name>onTable</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>onTable</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>buildInternal</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.Alter$AlterColumn</className>
      <method>
        <name>type</name>
        <parameters>
          <type>com.datastax.driver.core.DataType</type>
        </parameters>
      </method>
      <method>
        <name>udtType</name>
        <parameters>
          <type>com.datastax.driver.core.schemabuilder.UDTType</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.TableOptions$CompressionOptions$Algorithm</className>
      <method>
        <name>values</name>
      </method>
      <method>
        <name>valueOf</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>value</name>
      </method>
      <method>
        <name>toString</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.ExecutionInfo</className>
      <method>
        <name>getTriedHosts</name>
      </method>
      <method>
        <name>getQueriedHost</name>
      </method>
      <method>
        <name>getSpeculativeExecutions</name>
      </method>
      <method>
        <name>getSuccessfulExecutionIndex</name>
      </method>
      <method>
        <name>getAchievedConsistencyLevel</name>
      </method>
      <method>
        <name>getQueryTrace</name>
      </method>
      <method>
        <name>getQueryTraceAsync</name>
      </method>
      <method>
        <name>getPagingState</name>
      </method>
      <method>
        <name>getPagingStateUnsafe</name>
      </method>
      <method>
        <name>isSchemaInAgreement</name>
      </method>
      <method>
        <name>getWarnings</name>
      </method>
      <method>
        <name>getIncomingPayload</name>
      </method>
      <method>
        <name>getStatement</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.querybuilder.Select</className>
      <method>
        <name>where</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Clause</type>
        </parameters>
      </method>
      <method>
        <name>where</name>
      </method>
      <method>
        <name>orderBy</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Ordering...</type>
        </parameters>
      </method>
      <method>
        <name>groupBy</name>
        <parameters>
          <type>java.lang.Object...</type>
        </parameters>
      </method>
      <method>
        <name>limit</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>limit</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.BindMarker</type>
        </parameters>
      </method>
      <method>
        <name>perPartitionLimit</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>perPartitionLimit</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.BindMarker</type>
        </parameters>
      </method>
      <method>
        <name>allowFiltering</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.querybuilder.Delete$Selection</className>
      <method>
        <name>all</name>
      </method>
      <method>
        <name>column</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>listElt</name>
        <parameters>
          <type>java.lang.String</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>listElt</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.querybuilder.BindMarker</type>
        </parameters>
      </method>
      <method>
        <name>setElt</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>setElt</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.querybuilder.BindMarker</type>
        </parameters>
      </method>
      <method>
        <name>mapElt</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.querybuilder.QueryBuilder</className>
      <method>
        <name>select</name>
        <parameters>
          <type>java.lang.String...</type>
        </parameters>
      </method>
      <method>
        <name>select</name>
        <parameters>
          <type>java.lang.Object...</type>
        </parameters>
      </method>
      <method>
        <name>select</name>
      </method>
      <method>
        <name>insertInto</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>insertInto</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>insertInto</name>
        <parameters>
          <type>com.datastax.driver.core.TableMetadata</type>
        </parameters>
      </method>
      <method>
        <name>update</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>update</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>update</name>
        <parameters>
          <type>com.datastax.driver.core.TableMetadata</type>
        </parameters>
      </method>
      <method>
        <name>delete</name>
        <parameters>
          <type>java.lang.String...</type>
        </parameters>
      </method>
      <method>
        <name>delete</name>
      </method>
      <method>
        <name>batch</name>
        <parameters>
          <type>com.datastax.driver.core.RegularStatement...</type>
        </parameters>
      </method>
      <method>
        <name>unloggedBatch</name>
        <parameters>
          <type>com.datastax.driver.core.RegularStatement...</type>
        </parameters>
      </method>
      <method>
        <name>truncate</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>truncate</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>truncate</name>
        <parameters>
          <type>com.datastax.driver.core.TableMetadata</type>
        </parameters>
      </method>
      <method>
        <name>quote</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>token</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>token</name>
        <parameters>
          <type>java.lang.String...</type>
        </parameters>
      </method>
      <method>
        <name>token</name>
        <parameters>
          <type>java.lang.Object...</type>
        </parameters>
      </method>
      <method>
        <name>eq</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>eq</name>
        <parameters>
          <type>java.lang.Iterable&lt;java.lang.String&gt;</type>
          <type>java.lang.Iterable&lt;?&gt;</type>
        </parameters>
      </method>
      <method>
        <name>ne</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>ne</name>
        <parameters>
          <type>java.lang.Iterable&lt;java.lang.String&gt;</type>
          <type>java.lang.Iterable&lt;?&gt;</type>
        </parameters>
      </method>
      <method>
        <name>notNull</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>like</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>in</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object...</type>
        </parameters>
      </method>
      <method>
        <name>in</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Iterable&lt;?&gt;</type>
        </parameters>
      </method>
      <method>
        <name>in</name>
        <parameters>
          <type>java.lang.Iterable&lt;java.lang.String&gt;</type>
          <type>java.lang.Iterable&lt;?&gt;</type>
        </parameters>
      </method>
      <method>
        <name>contains</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>containsKey</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>lt</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>lt</name>
        <parameters>
          <type>java.lang.Iterable&lt;java.lang.String&gt;</type>
          <type>java.lang.Iterable&lt;?&gt;</type>
        </parameters>
      </method>
      <method>
        <name>lte</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>lte</name>
        <parameters>
          <type>java.lang.Iterable&lt;java.lang.String&gt;</type>
          <type>java.lang.Iterable&lt;?&gt;</type>
        </parameters>
      </method>
      <method>
        <name>gt</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>gt</name>
        <parameters>
          <type>java.lang.Iterable&lt;java.lang.String&gt;</type>
          <type>java.lang.Iterable&lt;?&gt;</type>
        </parameters>
      </method>
      <method>
        <name>gte</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>gte</name>
        <parameters>
          <type>java.lang.Iterable&lt;java.lang.String&gt;</type>
          <type>java.lang.Iterable&lt;?&gt;</type>
        </parameters>
      </method>
      <method>
        <name>asc</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>desc</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>timestamp</name>
        <parameters>
          <type>long</type>
        </parameters>
      </method>
      <method>
        <name>timestamp</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.BindMarker</type>
        </parameters>
      </method>
      <method>
        <name>ttl</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>ttl</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.BindMarker</type>
        </parameters>
      </method>
      <method>
        <name>set</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>set</name>
        <parameters>
          <type>java.lang.Object</type>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>incr</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>incr</name>
        <parameters>
          <type>java.lang.String</type>
          <type>long</type>
        </parameters>
      </method>
      <method>
        <name>incr</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.querybuilder.BindMarker</type>
        </parameters>
      </method>
      <method>
        <name>decr</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>decr</name>
        <parameters>
          <type>java.lang.String</type>
          <type>long</type>
        </parameters>
      </method>
      <method>
        <name>decr</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.querybuilder.BindMarker</type>
        </parameters>
      </method>
      <method>
        <name>prepend</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>prependAll</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.List&lt;?&gt;</type>
        </parameters>
      </method>
      <method>
        <name>prependAll</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.querybuilder.BindMarker</type>
        </parameters>
      </method>
      <method>
        <name>append</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>appendAll</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.List&lt;?&gt;</type>
        </parameters>
      </method>
      <method>
        <name>appendAll</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.querybuilder.BindMarker</type>
        </parameters>
      </method>
      <method>
        <name>discard</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>discardAll</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.List&lt;?&gt;</type>
        </parameters>
      </method>
      <method>
        <name>discardAll</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.querybuilder.BindMarker</type>
        </parameters>
      </method>
      <method>
        <name>setIdx</name>
        <parameters>
          <type>java.lang.String</type>
          <type>int</type>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>add</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>addAll</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.Set&lt;?&gt;</type>
        </parameters>
      </method>
      <method>
        <name>addAll</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.querybuilder.BindMarker</type>
        </parameters>
      </method>
      <method>
        <name>remove</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>removeAll</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.Set&lt;?&gt;</type>
        </parameters>
      </method>
      <method>
        <name>removeAll</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.querybuilder.BindMarker</type>
        </parameters>
      </method>
      <method>
        <name>put</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object</type>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>putAll</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.Map&lt;?</type>
          <type>?&gt;</type>
        </parameters>
      </method>
      <method>
        <name>putAll</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.querybuilder.BindMarker</type>
        </parameters>
      </method>
      <method>
        <name>bindMarker</name>
      </method>
      <method>
        <name>bindMarker</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>raw</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>fcall</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object...</type>
        </parameters>
      </method>
      <method>
        <name>cast</name>
        <parameters>
          <type>java.lang.Object</type>
          <type>com.datastax.driver.core.DataType</type>
        </parameters>
      </method>
      <method>
        <name>now</name>
      </method>
      <method>
        <name>uuid</name>
      </method>
      <method>
        <name>column</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>path</name>
        <parameters>
          <type>java.lang.String...</type>
        </parameters>
      </method>
      <method>
        <name>fromJson</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>toJson</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>alias</name>
        <parameters>
          <type>java.lang.Object</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>count</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>max</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>min</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>sum</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>avg</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.DefaultEndPointFactory</className>
      <method>
        <name>init</name>
        <parameters>
          <type>com.datastax.driver.core.Cluster</type>
        </parameters>
      </method>
      <method>
        <name>create</name>
        <parameters>
          <type>com.datastax.driver.core.Row</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.NettySSLOptions</className>
      <method>
        <name>newSSLHandler</name>
        <parameters>
          <type>io.netty.channel.socket.SocketChannel</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.QueryTrace$Event</className>
      <method>
        <name>getDescription</name>
      </method>
      <method>
        <name>getTimestamp</name>
      </method>
      <method>
        <name>getSource</name>
      </method>
      <method>
        <name>getSourceElapsedMicros</name>
      </method>
      <method>
        <name>getThreadName</name>
      </method>
      <method>
        <name>toString</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.WriteTimeoutException</className>
      <method>
        <name>getWriteType</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
        <parameters>
          <type>com.datastax.driver.core.EndPoint</type>
        </parameters>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.TruncateException</className>
      <method>
        <name>getEndPoint</name>
      </method>
      <method>
        <name>getAddress</name>
      </method>
      <method>
        <name>getHost</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.NoHostAvailableException</className>
      <method>
        <name>getErrors</name>
      </method>
      <method>
        <name>getCustomMessage</name>
        <parameters>
          <type>int</type>
          <type>boolean</type>
          <type>boolean</type>
        </parameters>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.InvalidTypeException</className>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.DriverInternalError</className>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.DowngradingConsistencyRetryPolicy</className>
      <method>
        <name>onReadTimeout</name>
        <parameters>
          <type>com.datastax.driver.core.Statement</type>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
          <type>int</type>
          <type>int</type>
          <type>boolean</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>onWriteTimeout</name>
        <parameters>
          <type>com.datastax.driver.core.Statement</type>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
          <type>com.datastax.driver.core.WriteType</type>
          <type>int</type>
          <type>int</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>onUnavailable</name>
        <parameters>
          <type>com.datastax.driver.core.Statement</type>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
          <type>int</type>
          <type>int</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>onRequestError</name>
        <parameters>
          <type>com.datastax.driver.core.Statement</type>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
          <type>com.datastax.driver.core.exceptions.DriverException</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>init</name>
        <parameters>
          <type>com.datastax.driver.core.Cluster</type>
        </parameters>
      </method>
      <method>
        <name>close</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.DefaultRetryPolicy</className>
      <method>
        <name>onReadTimeout</name>
        <parameters>
          <type>com.datastax.driver.core.Statement</type>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
          <type>int</type>
          <type>int</type>
          <type>boolean</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>onWriteTimeout</name>
        <parameters>
          <type>com.datastax.driver.core.Statement</type>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
          <type>com.datastax.driver.core.WriteType</type>
          <type>int</type>
          <type>int</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>onUnavailable</name>
        <parameters>
          <type>com.datastax.driver.core.Statement</type>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
          <type>int</type>
          <type>int</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>onRequestError</name>
        <parameters>
          <type>com.datastax.driver.core.Statement</type>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
          <type>com.datastax.driver.core.exceptions.DriverException</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>init</name>
        <parameters>
          <type>com.datastax.driver.core.Cluster</type>
        </parameters>
      </method>
      <method>
        <name>close</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.NoSpeculativeExecutionPolicy</className>
      <method>
        <name>newPlan</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.Statement</type>
        </parameters>
      </method>
      <method>
        <name>init</name>
        <parameters>
          <type>com.datastax.driver.core.Cluster</type>
        </parameters>
      </method>
      <method>
        <name>close</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.ExponentialReconnectionPolicy</className>
      <method>
        <name>getBaseDelayMs</name>
      </method>
      <method>
        <name>getMaxDelayMs</name>
      </method>
      <method>
        <name>newSchedule</name>
      </method>
      <method>
        <name>init</name>
        <parameters>
          <type>com.datastax.driver.core.Cluster</type>
        </parameters>
      </method>
      <method>
        <name>close</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.AtomicMonotonicTimestampGenerator</className>
      <method>
        <name>next</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.MetricsUtil</className>
      <method>
        <name>hostMetricName</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.UserType$Field</className>
      <method>
        <name>getName</name>
      </method>
      <method>
        <name>getType</name>
      </method>
      <method>
        <name>hashCode</name>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>toString</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.MetricsOptions</className>
      <method>
        <name>isEnabled</name>
      </method>
      <method>
        <name>isJMXReportingEnabled</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.ClusteringOrder</className>
      <method>
        <name>values</name>
      </method>
      <method>
        <name>valueOf</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.SchemaBuilder</className>
      <method>
        <name>createKeyspace</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>createTable</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>createTable</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>alterKeyspace</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>alterTable</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>alterTable</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>dropTable</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>dropKeyspace</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>dropTable</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>createIndex</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>dropIndex</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>dropIndex</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>createType</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>createType</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>dropType</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>dropType</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>frozen</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>udtLiteral</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>sizedTieredStategy</name>
      </method>
      <method>
        <name>leveledStrategy</name>
      </method>
      <method>
        <name>dateTieredStrategy</name>
      </method>
      <method>
        <name>timeWindowCompactionStrategy</name>
      </method>
      <method>
        <name>noCompression</name>
      </method>
      <method>
        <name>lz4</name>
      </method>
      <method>
        <name>snappy</name>
      </method>
      <method>
        <name>deflate</name>
      </method>
      <method>
        <name>noSpeculativeRetry</name>
      </method>
      <method>
        <name>always</name>
      </method>
      <method>
        <name>percentile</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>millisecs</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>noRows</name>
      </method>
      <method>
        <name>allRows</name>
      </method>
      <method>
        <name>rows</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>additionalWritePolicyNever</name>
      </method>
      <method>
        <name>additionalWritePolicyAlways</name>
      </method>
      <method>
        <name>additionalWritePolicyPercentile</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>additionalWritePolicyMillisecs</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.KeyspaceOptions</className>
      <method>
        <name>replication</name>
        <parameters>
          <type>java.util.Map&lt;java.lang.String</type>
          <type>java.lang.Object&gt;</type>
        </parameters>
      </method>
      <method>
        <name>durableWrites</name>
        <parameters>
          <type>java.lang.Boolean</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.TupleType</className>
      <method>
        <name>of</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
          <type>com.datastax.driver.core.DataType...</type>
        </parameters>
      </method>
      <method>
        <name>getComponentTypes</name>
      </method>
      <method>
        <name>newValue</name>
      </method>
      <method>
        <name>newValue</name>
        <parameters>
          <type>java.lang.Object...</type>
        </parameters>
      </method>
      <method>
        <name>isFrozen</name>
      </method>
      <method>
        <name>hashCode</name>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>contains</name>
        <parameters>
          <type>com.datastax.driver.core.TupleType</type>
        </parameters>
      </method>
      <method>
        <name>toString</name>
      </method>
      <method>
        <name>asFunctionParameterString</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.UserType</className>
      <method>
        <name>newValue</name>
      </method>
      <method>
        <name>getKeyspace</name>
      </method>
      <method>
        <name>getTypeName</name>
      </method>
      <method>
        <name>size</name>
      </method>
      <method>
        <name>contains</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>iterator</name>
      </method>
      <method>
        <name>getFieldNames</name>
      </method>
      <method>
        <name>getFieldType</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>isFrozen</name>
      </method>
      <method>
        <name>copy</name>
        <parameters>
          <type>boolean</type>
        </parameters>
      </method>
      <method>
        <name>hashCode</name>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>exportAsString</name>
      </method>
      <method>
        <name>asCQLQuery</name>
      </method>
      <method>
        <name>toString</name>
      </method>
      <method>
        <name>asFunctionParameterString</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.querybuilder.Update$Conditions</className>
      <method>
        <name>and</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Clause</type>
        </parameters>
      </method>
      <method>
        <name>with</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Assignment</type>
        </parameters>
      </method>
      <method>
        <name>where</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Clause</type>
        </parameters>
      </method>
      <method>
        <name>using</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Using</type>
        </parameters>
      </method>
      <method>
        <name>toString</name>
      </method>
      <method>
        <name>hasValues</name>
      </method>
      <method>
        <name>getValues</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getRetryPolicy</name>
      </method>
      <method>
        <name>setRetryPolicy</name>
        <parameters>
          <type>com.datastax.driver.core.policies.RetryPolicy</type>
        </parameters>
      </method>
      <method>
        <name>isTracing</name>
      </method>
      <method>
        <name>disableTracing</name>
      </method>
      <method>
        <name>enableTracing</name>
      </method>
      <method>
        <name>getConsistencyLevel</name>
      </method>
      <method>
        <name>setConsistencyLevel</name>
        <parameters>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
        </parameters>
      </method>
      <method>
        <name>setForceNoValues</name>
        <parameters>
          <type>boolean</type>
        </parameters>
      </method>
      <method>
        <name>getKeyspace</name>
      </method>
      <method>
        <name>getRoutingKey</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getQueryString</name>
        <parameters>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.querybuilder.Insert</className>
      <method>
        <name>value</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>values</name>
        <parameters>
          <type>java.lang.String[]</type>
          <type>java.lang.Object[]</type>
        </parameters>
      </method>
      <method>
        <name>values</name>
        <parameters>
          <type>java.util.List&lt;java.lang.String&gt;</type>
          <type>java.util.List&lt;java.lang.Object&gt;</type>
        </parameters>
      </method>
      <method>
        <name>json</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>defaultUnset</name>
      </method>
      <method>
        <name>defaultNull</name>
      </method>
      <method>
        <name>using</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Using</type>
        </parameters>
      </method>
      <method>
        <name>using</name>
      </method>
      <method>
        <name>ifNotExists</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.Native</className>
      <method>
        <name>isGettimeofdayAvailable</name>
      </method>
      <method>
        <name>isGetpidAvailable</name>
      </method>
      <method>
        <name>currentTimeMicros</name>
      </method>
      <method>
        <name>processId</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.BoundStatement</className>
      <method>
        <name>preparedStatement</name>
      </method>
      <method>
        <name>isSet</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>isSet</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>unset</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>unset</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>bind</name>
        <parameters>
          <type>java.lang.Object...</type>
        </parameters>
      </method>
      <method>
        <name>getRoutingKey</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>setRoutingKey</name>
        <parameters>
          <type>java.nio.ByteBuffer</type>
        </parameters>
      </method>
      <method>
        <name>setRoutingKey</name>
        <parameters>
          <type>java.nio.ByteBuffer...</type>
        </parameters>
      </method>
      <method>
        <name>getKeyspace</name>
      </method>
      <method>
        <name>requestSizeInBytes</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>setBool</name>
        <parameters>
          <type>int</type>
          <type>boolean</type>
        </parameters>
      </method>
      <method>
        <name>setBool</name>
        <parameters>
          <type>java.lang.String</type>
          <type>boolean</type>
        </parameters>
      </method>
      <method>
        <name>setByte</name>
        <parameters>
          <type>int</type>
          <type>byte</type>
        </parameters>
      </method>
      <method>
        <name>setByte</name>
        <parameters>
          <type>java.lang.String</type>
          <type>byte</type>
        </parameters>
      </method>
      <method>
        <name>setShort</name>
        <parameters>
          <type>int</type>
          <type>short</type>
        </parameters>
      </method>
      <method>
        <name>setShort</name>
        <parameters>
          <type>java.lang.String</type>
          <type>short</type>
        </parameters>
      </method>
      <method>
        <name>setInt</name>
        <parameters>
          <type>int</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>setInt</name>
        <parameters>
          <type>java.lang.String</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>setLong</name>
        <parameters>
          <type>int</type>
          <type>long</type>
        </parameters>
      </method>
      <method>
        <name>setLong</name>
        <parameters>
          <type>java.lang.String</type>
          <type>long</type>
        </parameters>
      </method>
      <method>
        <name>setTimestamp</name>
        <parameters>
          <type>int</type>
          <type>java.util.Date</type>
        </parameters>
      </method>
      <method>
        <name>setTimestamp</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.Date</type>
        </parameters>
      </method>
      <method>
        <name>setDate</name>
        <parameters>
          <type>int</type>
          <type>com.datastax.driver.core.LocalDate</type>
        </parameters>
      </method>
      <method>
        <name>setDate</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.LocalDate</type>
        </parameters>
      </method>
      <method>
        <name>setTime</name>
        <parameters>
          <type>int</type>
          <type>long</type>
        </parameters>
      </method>
      <method>
        <name>setTime</name>
        <parameters>
          <type>java.lang.String</type>
          <type>long</type>
        </parameters>
      </method>
      <method>
        <name>setFloat</name>
        <parameters>
          <type>int</type>
          <type>float</type>
        </parameters>
      </method>
      <method>
        <name>setFloat</name>
        <parameters>
          <type>java.lang.String</type>
          <type>float</type>
        </parameters>
      </method>
      <method>
        <name>setDouble</name>
        <parameters>
          <type>int</type>
          <type>double</type>
        </parameters>
      </method>
      <method>
        <name>setDouble</name>
        <parameters>
          <type>java.lang.String</type>
          <type>double</type>
        </parameters>
      </method>
      <method>
        <name>setString</name>
        <parameters>
          <type>int</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>setString</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>setBytes</name>
        <parameters>
          <type>int</type>
          <type>java.nio.ByteBuffer</type>
        </parameters>
      </method>
      <method>
        <name>setBytes</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.nio.ByteBuffer</type>
        </parameters>
      </method>
      <method>
        <name>setBytesUnsafe</name>
        <parameters>
          <type>int</type>
          <type>java.nio.ByteBuffer</type>
        </parameters>
      </method>
      <method>
        <name>setBytesUnsafe</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.nio.ByteBuffer</type>
        </parameters>
      </method>
      <method>
        <name>setVarint</name>
        <parameters>
          <type>int</type>
          <type>java.math.BigInteger</type>
        </parameters>
      </method>
      <method>
        <name>setVarint</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.math.BigInteger</type>
        </parameters>
      </method>
      <method>
        <name>setDecimal</name>
        <parameters>
          <type>int</type>
          <type>java.math.BigDecimal</type>
        </parameters>
      </method>
      <method>
        <name>setDecimal</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.math.BigDecimal</type>
        </parameters>
      </method>
      <method>
        <name>setUUID</name>
        <parameters>
          <type>int</type>
          <type>java.util.UUID</type>
        </parameters>
      </method>
      <method>
        <name>setUUID</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.UUID</type>
        </parameters>
      </method>
      <method>
        <name>setInet</name>
        <parameters>
          <type>int</type>
          <type>java.net.InetAddress</type>
        </parameters>
      </method>
      <method>
        <name>setInet</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.net.InetAddress</type>
        </parameters>
      </method>
      <method>
        <name>setToken</name>
        <parameters>
          <type>int</type>
          <type>com.datastax.driver.core.Token</type>
        </parameters>
      </method>
      <method>
        <name>setToken</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.Token</type>
        </parameters>
      </method>
      <method>
        <name>setPartitionKeyToken</name>
        <parameters>
          <type>com.datastax.driver.core.Token</type>
        </parameters>
      </method>
      <method>
        <name>setList</name>
        <parameters>
          <type>int</type>
          <type>java.util.List&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>setList</name>
        <parameters>
          <type>int</type>
          <type>java.util.List&lt;E&gt;</type>
          <type>java.lang.Class&lt;E&gt;</type>
        </parameters>
      </method>
      <method>
        <name>setList</name>
        <parameters>
          <type>int</type>
          <type>java.util.List&lt;E&gt;</type>
          <type>com.google.common.reflect.TypeToken&lt;E&gt;</type>
        </parameters>
      </method>
      <method>
        <name>setList</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.List&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>setList</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.List&lt;E&gt;</type>
          <type>java.lang.Class&lt;E&gt;</type>
        </parameters>
      </method>
      <method>
        <name>setList</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.List&lt;E&gt;</type>
          <type>com.google.common.reflect.TypeToken&lt;E&gt;</type>
        </parameters>
      </method>
      <method>
        <name>setMap</name>
        <parameters>
          <type>int</type>
          <type>java.util.Map&lt;K</type>
          <type>V&gt;</type>
        </parameters>
      </method>
      <method>
        <name>setMap</name>
        <parameters>
          <type>int</type>
          <type>java.util.Map&lt;K</type>
          <type>V&gt;</type>
          <type>java.lang.Class&lt;K&gt;</type>
          <type>java.lang.Class&lt;V&gt;</type>
        </parameters>
      </method>
      <method>
        <name>setMap</name>
        <parameters>
          <type>int</type>
          <type>java.util.Map&lt;K</type>
          <type>V&gt;</type>
          <type>com.google.common.reflect.TypeToken&lt;K&gt;</type>
          <type>com.google.common.reflect.TypeToken&lt;V&gt;</type>
        </parameters>
      </method>
      <method>
        <name>setMap</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.Map&lt;K</type>
          <type>V&gt;</type>
        </parameters>
      </method>
      <method>
        <name>setMap</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.Map&lt;K</type>
          <type>V&gt;</type>
          <type>java.lang.Class&lt;K&gt;</type>
          <type>java.lang.Class&lt;V&gt;</type>
        </parameters>
      </method>
      <method>
        <name>setMap</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.Map&lt;K</type>
          <type>V&gt;</type>
          <type>com.google.common.reflect.TypeToken&lt;K&gt;</type>
          <type>com.google.common.reflect.TypeToken&lt;V&gt;</type>
        </parameters>
      </method>
      <method>
        <name>setSet</name>
        <parameters>
          <type>int</type>
          <type>java.util.Set&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>setSet</name>
        <parameters>
          <type>int</type>
          <type>java.util.Set&lt;E&gt;</type>
          <type>java.lang.Class&lt;E&gt;</type>
        </parameters>
      </method>
      <method>
        <name>setSet</name>
        <parameters>
          <type>int</type>
          <type>java.util.Set&lt;E&gt;</type>
          <type>com.google.common.reflect.TypeToken&lt;E&gt;</type>
        </parameters>
      </method>
      <method>
        <name>setSet</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.Set&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>setSet</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.Set&lt;E&gt;</type>
          <type>java.lang.Class&lt;E&gt;</type>
        </parameters>
      </method>
      <method>
        <name>setSet</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.Set&lt;E&gt;</type>
          <type>com.google.common.reflect.TypeToken&lt;E&gt;</type>
        </parameters>
      </method>
      <method>
        <name>setUDTValue</name>
        <parameters>
          <type>int</type>
          <type>com.datastax.driver.core.UDTValue</type>
        </parameters>
      </method>
      <method>
        <name>setUDTValue</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.UDTValue</type>
        </parameters>
      </method>
      <method>
        <name>setTupleValue</name>
        <parameters>
          <type>int</type>
          <type>com.datastax.driver.core.TupleValue</type>
        </parameters>
      </method>
      <method>
        <name>setTupleValue</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.TupleValue</type>
        </parameters>
      </method>
      <method>
        <name>set</name>
        <parameters>
          <type>int</type>
          <type>V</type>
          <type>java.lang.Class&lt;V&gt;</type>
        </parameters>
      </method>
      <method>
        <name>set</name>
        <parameters>
          <type>java.lang.String</type>
          <type>V</type>
          <type>java.lang.Class&lt;V&gt;</type>
        </parameters>
      </method>
      <method>
        <name>set</name>
        <parameters>
          <type>int</type>
          <type>V</type>
          <type>com.google.common.reflect.TypeToken&lt;V&gt;</type>
        </parameters>
      </method>
      <method>
        <name>set</name>
        <parameters>
          <type>java.lang.String</type>
          <type>V</type>
          <type>com.google.common.reflect.TypeToken&lt;V&gt;</type>
        </parameters>
      </method>
      <method>
        <name>set</name>
        <parameters>
          <type>int</type>
          <type>V</type>
          <type>com.datastax.driver.core.TypeCodec&lt;V&gt;</type>
        </parameters>
      </method>
      <method>
        <name>set</name>
        <parameters>
          <type>java.lang.String</type>
          <type>V</type>
          <type>com.datastax.driver.core.TypeCodec&lt;V&gt;</type>
        </parameters>
      </method>
      <method>
        <name>setToNull</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>setToNull</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>isNull</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>isNull</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getBool</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getBool</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getByte</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getByte</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getShort</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getShort</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getInt</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getInt</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getLong</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getLong</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getTimestamp</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getTimestamp</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getDate</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getDate</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getTime</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getTime</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getFloat</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getFloat</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getDouble</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getDouble</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getBytesUnsafe</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getBytesUnsafe</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getBytes</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getBytes</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getString</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getString</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getVarint</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getVarint</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getDecimal</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getDecimal</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getUUID</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getUUID</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getInet</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getInet</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getList</name>
        <parameters>
          <type>int</type>
          <type>java.lang.Class&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>getList</name>
        <parameters>
          <type>int</type>
          <type>com.google.common.reflect.TypeToken&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>getList</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Class&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>getList</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.google.common.reflect.TypeToken&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>getSet</name>
        <parameters>
          <type>int</type>
          <type>java.lang.Class&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>getSet</name>
        <parameters>
          <type>int</type>
          <type>com.google.common.reflect.TypeToken&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>getSet</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Class&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>getSet</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.google.common.reflect.TypeToken&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>getMap</name>
        <parameters>
          <type>int</type>
          <type>java.lang.Class&lt;K&gt;</type>
          <type>java.lang.Class&lt;V&gt;</type>
        </parameters>
      </method>
      <method>
        <name>getMap</name>
        <parameters>
          <type>int</type>
          <type>com.google.common.reflect.TypeToken&lt;K&gt;</type>
          <type>com.google.common.reflect.TypeToken&lt;V&gt;</type>
        </parameters>
      </method>
      <method>
        <name>getMap</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Class&lt;K&gt;</type>
          <type>java.lang.Class&lt;V&gt;</type>
        </parameters>
      </method>
      <method>
        <name>getMap</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.google.common.reflect.TypeToken&lt;K&gt;</type>
          <type>com.google.common.reflect.TypeToken&lt;V&gt;</type>
        </parameters>
      </method>
      <method>
        <name>getUDTValue</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getUDTValue</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getTupleValue</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getTupleValue</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getObject</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getObject</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>get</name>
        <parameters>
          <type>int</type>
          <type>java.lang.Class&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>get</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Class&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>get</name>
        <parameters>
          <type>int</type>
          <type>com.google.common.reflect.TypeToken&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>get</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.google.common.reflect.TypeToken&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>get</name>
        <parameters>
          <type>int</type>
          <type>com.datastax.driver.core.TypeCodec&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>get</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.TypeCodec&lt;T&gt;</type>
        </parameters>
      </method>
      <method>
        <name>set</name>
        <parameters>
          <type>int</type>
          <type>java.lang.Object</type>
          <type>com.datastax.driver.core.TypeCodec</type>
        </parameters>
      </method>
      <method>
        <name>set</name>
        <parameters>
          <type>int</type>
          <type>java.lang.Object</type>
          <type>com.google.common.reflect.TypeToken</type>
        </parameters>
      </method>
      <method>
        <name>set</name>
        <parameters>
          <type>int</type>
          <type>java.lang.Object</type>
          <type>java.lang.Class</type>
        </parameters>
      </method>
      <method>
        <name>setToNull</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>setTupleValue</name>
        <parameters>
          <type>int</type>
          <type>com.datastax.driver.core.TupleValue</type>
        </parameters>
      </method>
      <method>
        <name>setUDTValue</name>
        <parameters>
          <type>int</type>
          <type>com.datastax.driver.core.UDTValue</type>
        </parameters>
      </method>
      <method>
        <name>setSet</name>
        <parameters>
          <type>int</type>
          <type>java.util.Set</type>
          <type>com.google.common.reflect.TypeToken</type>
        </parameters>
      </method>
      <method>
        <name>setSet</name>
        <parameters>
          <type>int</type>
          <type>java.util.Set</type>
          <type>java.lang.Class</type>
        </parameters>
      </method>
      <method>
        <name>setSet</name>
        <parameters>
          <type>int</type>
          <type>java.util.Set</type>
        </parameters>
      </method>
      <method>
        <name>setMap</name>
        <parameters>
          <type>int</type>
          <type>java.util.Map</type>
          <type>com.google.common.reflect.TypeToken</type>
          <type>com.google.common.reflect.TypeToken</type>
        </parameters>
      </method>
      <method>
        <name>setMap</name>
        <parameters>
          <type>int</type>
          <type>java.util.Map</type>
          <type>java.lang.Class</type>
          <type>java.lang.Class</type>
        </parameters>
      </method>
      <method>
        <name>setMap</name>
        <parameters>
          <type>int</type>
          <type>java.util.Map</type>
        </parameters>
      </method>
      <method>
        <name>setList</name>
        <parameters>
          <type>int</type>
          <type>java.util.List</type>
          <type>com.google.common.reflect.TypeToken</type>
        </parameters>
      </method>
      <method>
        <name>setList</name>
        <parameters>
          <type>int</type>
          <type>java.util.List</type>
          <type>java.lang.Class</type>
        </parameters>
      </method>
      <method>
        <name>setList</name>
        <parameters>
          <type>int</type>
          <type>java.util.List</type>
        </parameters>
      </method>
      <method>
        <name>setInet</name>
        <parameters>
          <type>int</type>
          <type>java.net.InetAddress</type>
        </parameters>
      </method>
      <method>
        <name>setUUID</name>
        <parameters>
          <type>int</type>
          <type>java.util.UUID</type>
        </parameters>
      </method>
      <method>
        <name>setDecimal</name>
        <parameters>
          <type>int</type>
          <type>java.math.BigDecimal</type>
        </parameters>
      </method>
      <method>
        <name>setVarint</name>
        <parameters>
          <type>int</type>
          <type>java.math.BigInteger</type>
        </parameters>
      </method>
      <method>
        <name>setBytesUnsafe</name>
        <parameters>
          <type>int</type>
          <type>java.nio.ByteBuffer</type>
        </parameters>
      </method>
      <method>
        <name>setBytes</name>
        <parameters>
          <type>int</type>
          <type>java.nio.ByteBuffer</type>
        </parameters>
      </method>
      <method>
        <name>setString</name>
        <parameters>
          <type>int</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>setDouble</name>
        <parameters>
          <type>int</type>
          <type>double</type>
        </parameters>
      </method>
      <method>
        <name>setFloat</name>
        <parameters>
          <type>int</type>
          <type>float</type>
        </parameters>
      </method>
      <method>
        <name>setTime</name>
        <parameters>
          <type>int</type>
          <type>long</type>
        </parameters>
      </method>
      <method>
        <name>setDate</name>
        <parameters>
          <type>int</type>
          <type>com.datastax.driver.core.LocalDate</type>
        </parameters>
      </method>
      <method>
        <name>setTimestamp</name>
        <parameters>
          <type>int</type>
          <type>java.util.Date</type>
        </parameters>
      </method>
      <method>
        <name>setLong</name>
        <parameters>
          <type>int</type>
          <type>long</type>
        </parameters>
      </method>
      <method>
        <name>setInt</name>
        <parameters>
          <type>int</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>setShort</name>
        <parameters>
          <type>int</type>
          <type>short</type>
        </parameters>
      </method>
      <method>
        <name>setByte</name>
        <parameters>
          <type>int</type>
          <type>byte</type>
        </parameters>
      </method>
      <method>
        <name>setBool</name>
        <parameters>
          <type>int</type>
          <type>boolean</type>
        </parameters>
      </method>
      <method>
        <name>set</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object</type>
          <type>com.datastax.driver.core.TypeCodec</type>
        </parameters>
      </method>
      <method>
        <name>set</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object</type>
          <type>com.google.common.reflect.TypeToken</type>
        </parameters>
      </method>
      <method>
        <name>set</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object</type>
          <type>java.lang.Class</type>
        </parameters>
      </method>
      <method>
        <name>setToNull</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>setTupleValue</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.TupleValue</type>
        </parameters>
      </method>
      <method>
        <name>setUDTValue</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.UDTValue</type>
        </parameters>
      </method>
      <method>
        <name>setSet</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.Set</type>
          <type>com.google.common.reflect.TypeToken</type>
        </parameters>
      </method>
      <method>
        <name>setSet</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.Set</type>
          <type>java.lang.Class</type>
        </parameters>
      </method>
      <method>
        <name>setSet</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.Set</type>
        </parameters>
      </method>
      <method>
        <name>setMap</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.Map</type>
          <type>com.google.common.reflect.TypeToken</type>
          <type>com.google.common.reflect.TypeToken</type>
        </parameters>
      </method>
      <method>
        <name>setMap</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.Map</type>
          <type>java.lang.Class</type>
          <type>java.lang.Class</type>
        </parameters>
      </method>
      <method>
        <name>setMap</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.Map</type>
        </parameters>
      </method>
      <method>
        <name>setList</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.List</type>
          <type>com.google.common.reflect.TypeToken</type>
        </parameters>
      </method>
      <method>
        <name>setList</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.List</type>
          <type>java.lang.Class</type>
        </parameters>
      </method>
      <method>
        <name>setList</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.List</type>
        </parameters>
      </method>
      <method>
        <name>setInet</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.net.InetAddress</type>
        </parameters>
      </method>
      <method>
        <name>setUUID</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.UUID</type>
        </parameters>
      </method>
      <method>
        <name>setDecimal</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.math.BigDecimal</type>
        </parameters>
      </method>
      <method>
        <name>setVarint</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.math.BigInteger</type>
        </parameters>
      </method>
      <method>
        <name>setBytesUnsafe</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.nio.ByteBuffer</type>
        </parameters>
      </method>
      <method>
        <name>setBytes</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.nio.ByteBuffer</type>
        </parameters>
      </method>
      <method>
        <name>setString</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>setDouble</name>
        <parameters>
          <type>java.lang.String</type>
          <type>double</type>
        </parameters>
      </method>
      <method>
        <name>setFloat</name>
        <parameters>
          <type>java.lang.String</type>
          <type>float</type>
        </parameters>
      </method>
      <method>
        <name>setTime</name>
        <parameters>
          <type>java.lang.String</type>
          <type>long</type>
        </parameters>
      </method>
      <method>
        <name>setDate</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.LocalDate</type>
        </parameters>
      </method>
      <method>
        <name>setTimestamp</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.Date</type>
        </parameters>
      </method>
      <method>
        <name>setLong</name>
        <parameters>
          <type>java.lang.String</type>
          <type>long</type>
        </parameters>
      </method>
      <method>
        <name>setInt</name>
        <parameters>
          <type>java.lang.String</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>setShort</name>
        <parameters>
          <type>java.lang.String</type>
          <type>short</type>
        </parameters>
      </method>
      <method>
        <name>setByte</name>
        <parameters>
          <type>java.lang.String</type>
          <type>byte</type>
        </parameters>
      </method>
      <method>
        <name>setBool</name>
        <parameters>
          <type>java.lang.String</type>
          <type>boolean</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.utils.UUIDs</className>
      <method>
        <name>random</name>
      </method>
      <method>
        <name>timeBased</name>
      </method>
      <method>
        <name>startOf</name>
        <parameters>
          <type>long</type>
        </parameters>
      </method>
      <method>
        <name>endOf</name>
        <parameters>
          <type>long</type>
        </parameters>
      </method>
      <method>
        <name>unixTimestamp</name>
        <parameters>
          <type>java.util.UUID</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.ColumnMetadata$Raw$Kind</className>
      <method>
        <name>values</name>
      </method>
      <method>
        <name>valueOf</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.UnresolvedUserTypeException</className>
      <method>
        <name>getKeyspaceName</name>
      </method>
      <method>
        <name>getName</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.ConnectionException</className>
      <method>
        <name>getEndPoint</name>
      </method>
      <method>
        <name>getAddress</name>
      </method>
      <method>
        <name>getHost</name>
      </method>
      <method>
        <name>getMessage</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.OperationTimedOutException</className>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.OverloadedException</className>
      <method>
        <name>getEndPoint</name>
      </method>
      <method>
        <name>getAddress</name>
      </method>
      <method>
        <name>getHost</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.SyntaxError</className>
      <method>
        <name>getEndPoint</name>
      </method>
      <method>
        <name>getAddress</name>
      </method>
      <method>
        <name>getHost</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.AlreadyExistsException</className>
      <method>
        <name>getEndPoint</name>
      </method>
      <method>
        <name>getAddress</name>
      </method>
      <method>
        <name>getHost</name>
      </method>
      <method>
        <name>wasTableCreation</name>
      </method>
      <method>
        <name>getKeyspace</name>
      </method>
      <method>
        <name>getTable</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
        <parameters>
          <type>com.datastax.driver.core.EndPoint</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.Policies$Builder</className>
      <method>
        <name>withLoadBalancingPolicy</name>
        <parameters>
          <type>com.datastax.driver.core.policies.LoadBalancingPolicy</type>
        </parameters>
      </method>
      <method>
        <name>withReconnectionPolicy</name>
        <parameters>
          <type>com.datastax.driver.core.policies.ReconnectionPolicy</type>
        </parameters>
      </method>
      <method>
        <name>withRetryPolicy</name>
        <parameters>
          <type>com.datastax.driver.core.policies.RetryPolicy</type>
        </parameters>
      </method>
      <method>
        <name>withAddressTranslator</name>
        <parameters>
          <type>com.datastax.driver.core.policies.AddressTranslator</type>
        </parameters>
      </method>
      <method>
        <name>withTimestampGenerator</name>
        <parameters>
          <type>com.datastax.driver.core.TimestampGenerator</type>
        </parameters>
      </method>
      <method>
        <name>withSpeculativeExecutionPolicy</name>
        <parameters>
          <type>com.datastax.driver.core.policies.SpeculativeExecutionPolicy</type>
        </parameters>
      </method>
      <method>
        <name>withEndPointFactory</name>
        <parameters>
          <type>com.datastax.driver.core.EndPointFactory</type>
        </parameters>
      </method>
      <method>
        <name>build</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.PercentileSpeculativeExecutionPolicy</className>
      <method>
        <name>newPlan</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.Statement</type>
        </parameters>
      </method>
      <method>
        <name>init</name>
        <parameters>
          <type>com.datastax.driver.core.Cluster</type>
        </parameters>
      </method>
      <method>
        <name>close</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.LatencyAwarePolicy$Builder</className>
      <method>
        <name>withExclusionThreshold</name>
        <parameters>
          <type>double</type>
        </parameters>
      </method>
      <method>
        <name>withScale</name>
        <parameters>
          <type>long</type>
          <type>java.util.concurrent.TimeUnit</type>
        </parameters>
      </method>
      <method>
        <name>withRetryPeriod</name>
        <parameters>
          <type>long</type>
          <type>java.util.concurrent.TimeUnit</type>
        </parameters>
      </method>
      <method>
        <name>withUpdateRate</name>
        <parameters>
          <type>long</type>
          <type>java.util.concurrent.TimeUnit</type>
        </parameters>
      </method>
      <method>
        <name>withMininumMeasurements</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>build</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.DCAwareRoundRobinPolicy</className>
      <method>
        <name>builder</name>
      </method>
      <method>
        <name>init</name>
        <parameters>
          <type>com.datastax.driver.core.Cluster</type>
          <type>java.util.Collection&lt;com.datastax.driver.core.Host&gt;</type>
        </parameters>
      </method>
      <method>
        <name>distance</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>newQueryPlan</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.Statement</type>
        </parameters>
      </method>
      <method>
        <name>onUp</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>onDown</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>onAdd</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>onRemove</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>close</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.Metrics</className>
      <method>
        <name>getRegistry</name>
      </method>
      <method>
        <name>getRequestsTimer</name>
      </method>
      <method>
        <name>getErrorMetrics</name>
      </method>
      <method>
        <name>getKnownHosts</name>
      </method>
      <method>
        <name>getConnectedToHosts</name>
      </method>
      <method>
        <name>getOpenConnections</name>
      </method>
      <method>
        <name>getTrashedConnections</name>
      </method>
      <method>
        <name>getInFlightRequests</name>
      </method>
      <method>
        <name>getRequestQueueDepth</name>
      </method>
      <method>
        <name>getExecutorQueueDepth</name>
      </method>
      <method>
        <name>getBlockingExecutorQueueDepth</name>
      </method>
      <method>
        <name>getReconnectionSchedulerQueueSize</name>
      </method>
      <method>
        <name>getTaskSchedulerQueueSize</name>
      </method>
      <method>
        <name>getBytesSent</name>
      </method>
      <method>
        <name>getBytesReceived</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.RemoteEndpointAwareJdkSSLOptions</className>
      <method>
        <name>builder</name>
      </method>
      <method>
        <name>newSSLHandler</name>
        <parameters>
          <type>io.netty.channel.socket.SocketChannel</type>
        </parameters>
      </method>
      <method>
        <name>newSSLHandler</name>
        <parameters>
          <type>io.netty.channel.socket.SocketChannel</type>
          <type>com.datastax.driver.core.EndPoint</type>
        </parameters>
      </method>
      <method>
        <name>newSSLHandler</name>
        <parameters>
          <type>io.netty.channel.socket.SocketChannel</type>
          <type>java.net.InetSocketAddress</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.Alter$RenameColumn</className>
      <method>
        <name>to</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.Alter</className>
      <method>
        <name>alterColumn</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>addColumn</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>addStaticColumn</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>dropColumn</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>renameColumn</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>withOptions</name>
      </method>
      <method>
        <name>buildInternal</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.TableOptions$CompressionOptions$NoCompression</className>
      <method>
        <name>withChunkLengthInKb</name>
        <parameters>
          <type>java.lang.Integer</type>
        </parameters>
      </method>
      <method>
        <name>withCRCCheckChance</name>
        <parameters>
          <type>java.lang.Double</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.AggregateMetadata</className>
      <method>
        <name>exportAsString</name>
      </method>
      <method>
        <name>asCQLQuery</name>
      </method>
      <method>
        <name>toString</name>
      </method>
      <method>
        <name>getKeyspace</name>
      </method>
      <method>
        <name>getSignature</name>
      </method>
      <method>
        <name>getSimpleName</name>
      </method>
      <method>
        <name>getArgumentTypes</name>
      </method>
      <method>
        <name>getFinalFunc</name>
      </method>
      <method>
        <name>getInitCond</name>
      </method>
      <method>
        <name>getReturnType</name>
      </method>
      <method>
        <name>getStateFunc</name>
      </method>
      <method>
        <name>getStateType</name>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>hashCode</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.querybuilder.Delete$Builder</className>
      <method>
        <name>from</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>from</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>from</name>
        <parameters>
          <type>com.datastax.driver.core.TableMetadata</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.querybuilder.Insert$Options</className>
      <method>
        <name>and</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Using</type>
        </parameters>
      </method>
      <method>
        <name>value</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>values</name>
        <parameters>
          <type>java.lang.String[]</type>
          <type>java.lang.Object[]</type>
        </parameters>
      </method>
      <method>
        <name>toString</name>
      </method>
      <method>
        <name>hasValues</name>
      </method>
      <method>
        <name>getValues</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getRetryPolicy</name>
      </method>
      <method>
        <name>setRetryPolicy</name>
        <parameters>
          <type>com.datastax.driver.core.policies.RetryPolicy</type>
        </parameters>
      </method>
      <method>
        <name>isTracing</name>
      </method>
      <method>
        <name>disableTracing</name>
      </method>
      <method>
        <name>enableTracing</name>
      </method>
      <method>
        <name>getConsistencyLevel</name>
      </method>
      <method>
        <name>setConsistencyLevel</name>
        <parameters>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
        </parameters>
      </method>
      <method>
        <name>setForceNoValues</name>
        <parameters>
          <type>boolean</type>
        </parameters>
      </method>
      <method>
        <name>getKeyspace</name>
      </method>
      <method>
        <name>getRoutingKey</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getQueryString</name>
        <parameters>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.querybuilder.Delete$Where</className>
      <method>
        <name>and</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Clause</type>
        </parameters>
      </method>
      <method>
        <name>using</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Using</type>
        </parameters>
      </method>
      <method>
        <name>ifExists</name>
      </method>
      <method>
        <name>onlyIf</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Clause</type>
        </parameters>
      </method>
      <method>
        <name>toString</name>
      </method>
      <method>
        <name>hasValues</name>
      </method>
      <method>
        <name>getValues</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getRetryPolicy</name>
      </method>
      <method>
        <name>setRetryPolicy</name>
        <parameters>
          <type>com.datastax.driver.core.policies.RetryPolicy</type>
        </parameters>
      </method>
      <method>
        <name>isTracing</name>
      </method>
      <method>
        <name>disableTracing</name>
      </method>
      <method>
        <name>enableTracing</name>
      </method>
      <method>
        <name>getConsistencyLevel</name>
      </method>
      <method>
        <name>setConsistencyLevel</name>
        <parameters>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
        </parameters>
      </method>
      <method>
        <name>setForceNoValues</name>
        <parameters>
          <type>boolean</type>
        </parameters>
      </method>
      <method>
        <name>getKeyspace</name>
      </method>
      <method>
        <name>getRoutingKey</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getQueryString</name>
        <parameters>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.ProtocolVersion</className>
      <method>
        <name>values</name>
      </method>
      <method>
        <name>valueOf</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>toInt</name>
      </method>
      <method>
        <name>getLowerSupported</name>
      </method>
      <method>
        <name>fromInt</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.FunctionMetadata</className>
      <method>
        <name>exportAsString</name>
      </method>
      <method>
        <name>asCQLQuery</name>
      </method>
      <method>
        <name>toString</name>
      </method>
      <method>
        <name>getKeyspace</name>
      </method>
      <method>
        <name>getSignature</name>
      </method>
      <method>
        <name>getSimpleName</name>
      </method>
      <method>
        <name>getArguments</name>
      </method>
      <method>
        <name>getBody</name>
      </method>
      <method>
        <name>isCalledOnNullInput</name>
      </method>
      <method>
        <name>getLanguage</name>
      </method>
      <method>
        <name>getReturnType</name>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>hashCode</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.DataType$NativeType</className>
      <method>
        <name>isFrozen</name>
      </method>
      <method>
        <name>hashCode</name>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>toString</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.ServerError</className>
      <method>
        <name>getEndPoint</name>
      </method>
      <method>
        <name>getAddress</name>
      </method>
      <method>
        <name>getHost</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.UnpreparedException</className>
      <method>
        <name>getEndPoint</name>
      </method>
      <method>
        <name>getAddress</name>
      </method>
      <method>
        <name>getHost</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.AuthenticationException</className>
      <method>
        <name>getEndPoint</name>
      </method>
      <method>
        <name>getAddress</name>
      </method>
      <method>
        <name>getHost</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.RetryPolicy$RetryDecision$Type</className>
      <method>
        <name>values</name>
      </method>
      <method>
        <name>valueOf</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.HostFilterPolicy</className>
      <method>
        <name>getChildPolicy</name>
      </method>
      <method>
        <name>init</name>
        <parameters>
          <type>com.datastax.driver.core.Cluster</type>
          <type>java.util.Collection&lt;com.datastax.driver.core.Host&gt;</type>
        </parameters>
      </method>
      <method>
        <name>distance</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>newQueryPlan</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.Statement</type>
        </parameters>
      </method>
      <method>
        <name>onUp</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>onDown</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>onAdd</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>onRemove</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
      <method>
        <name>close</name>
      </method>
      <method>
        <name>fromDCWhiteList</name>
        <parameters>
          <type>com.datastax.driver.core.policies.LoadBalancingPolicy</type>
          <type>java.lang.Iterable&lt;java.lang.String&gt;</type>
        </parameters>
      </method>
      <method>
        <name>fromDCBlackList</name>
        <parameters>
          <type>com.datastax.driver.core.policies.LoadBalancingPolicy</type>
          <type>java.lang.Iterable&lt;java.lang.String&gt;</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.LatencyAwarePolicy$Snapshot</className>
      <method>
        <name>getAllStats</name>
      </method>
      <method>
        <name>getStats</name>
        <parameters>
          <type>com.datastax.driver.core.Host</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.TokenAwarePolicy$ReplicaOrdering</className>
      <method>
        <name>values</name>
      </method>
      <method>
        <name>valueOf</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.AuthProvider$TransitionalModePlainTextAuthenticator</className>
      <method>
        <name>onAuthenticationSuccess</name>
        <parameters>
          <type>byte[]</type>
        </parameters>
      </method>
      <method>
        <name>evaluateChallenge</name>
        <parameters>
          <type>byte[]</type>
        </parameters>
      </method>
      <method>
        <name>initialResponse</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.ExtendedAuthProvider$NoAuthProvider</className>
      <method>
        <name>newAuthenticator</name>
        <parameters>
          <type>com.datastax.driver.core.EndPoint</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>newAuthenticator</name>
        <parameters>
          <type>java.net.InetSocketAddress</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.WriteType</className>
      <method>
        <name>values</name>
      </method>
      <method>
        <name>valueOf</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.ThreadLocalMonotonicTimestampGenerator</className>
      <method>
        <name>next</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.Cluster$Builder</className>
      <method>
        <name>getClusterName</name>
      </method>
      <method>
        <name>getContactPoints</name>
      </method>
      <method>
        <name>withClusterName</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>withPort</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>allowBetaProtocolVersion</name>
      </method>
      <method>
        <name>withMaxSchemaAgreementWaitSeconds</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>withProtocolVersion</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
        </parameters>
      </method>
      <method>
        <name>addContactPoint</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>addContactPoint</name>
        <parameters>
          <type>com.datastax.driver.core.EndPoint</type>
        </parameters>
      </method>
      <method>
        <name>addContactPoints</name>
        <parameters>
          <type>java.lang.String...</type>
        </parameters>
      </method>
      <method>
        <name>addContactPoints</name>
        <parameters>
          <type>java.net.InetAddress...</type>
        </parameters>
      </method>
      <method>
        <name>addContactPoints</name>
        <parameters>
          <type>java.util.Collection&lt;java.net.InetAddress&gt;</type>
        </parameters>
      </method>
      <method>
        <name>addContactPointsWithPorts</name>
        <parameters>
          <type>java.net.InetSocketAddress...</type>
        </parameters>
      </method>
      <method>
        <name>addContactPointsWithPorts</name>
        <parameters>
          <type>java.util.Collection&lt;java.net.InetSocketAddress&gt;</type>
        </parameters>
      </method>
      <method>
        <name>withLoadBalancingPolicy</name>
        <parameters>
          <type>com.datastax.driver.core.policies.LoadBalancingPolicy</type>
        </parameters>
      </method>
      <method>
        <name>withReconnectionPolicy</name>
        <parameters>
          <type>com.datastax.driver.core.policies.ReconnectionPolicy</type>
        </parameters>
      </method>
      <method>
        <name>withRetryPolicy</name>
        <parameters>
          <type>com.datastax.driver.core.policies.RetryPolicy</type>
        </parameters>
      </method>
      <method>
        <name>withAddressTranslator</name>
        <parameters>
          <type>com.datastax.driver.core.policies.AddressTranslator</type>
        </parameters>
      </method>
      <method>
        <name>withTimestampGenerator</name>
        <parameters>
          <type>com.datastax.driver.core.TimestampGenerator</type>
        </parameters>
      </method>
      <method>
        <name>withSpeculativeExecutionPolicy</name>
        <parameters>
          <type>com.datastax.driver.core.policies.SpeculativeExecutionPolicy</type>
        </parameters>
      </method>
      <method>
        <name>withEndPointFactory</name>
        <parameters>
          <type>com.datastax.driver.core.EndPointFactory</type>
        </parameters>
      </method>
      <method>
        <name>withCodecRegistry</name>
        <parameters>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>withCredentials</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>withAuthProvider</name>
        <parameters>
          <type>com.datastax.driver.core.AuthProvider</type>
        </parameters>
      </method>
      <method>
        <name>withCompression</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolOptions$Compression</type>
        </parameters>
      </method>
      <method>
        <name>withoutMetrics</name>
      </method>
      <method>
        <name>withSSL</name>
      </method>
      <method>
        <name>withSSL</name>
        <parameters>
          <type>com.datastax.driver.core.SSLOptions</type>
        </parameters>
      </method>
      <method>
        <name>withInitialListeners</name>
        <parameters>
          <type>java.util.Collection&lt;com.datastax.driver.core.Host$StateListener&gt;</type>
        </parameters>
      </method>
      <method>
        <name>withoutJMXReporting</name>
      </method>
      <method>
        <name>withPoolingOptions</name>
        <parameters>
          <type>com.datastax.driver.core.PoolingOptions</type>
        </parameters>
      </method>
      <method>
        <name>withSocketOptions</name>
        <parameters>
          <type>com.datastax.driver.core.SocketOptions</type>
        </parameters>
      </method>
      <method>
        <name>withQueryOptions</name>
        <parameters>
          <type>com.datastax.driver.core.QueryOptions</type>
        </parameters>
      </method>
      <method>
        <name>withThreadingOptions</name>
        <parameters>
          <type>com.datastax.driver.core.ThreadingOptions</type>
        </parameters>
      </method>
      <method>
        <name>withNettyOptions</name>
        <parameters>
          <type>com.datastax.driver.core.NettyOptions</type>
        </parameters>
      </method>
      <method>
        <name>withNoCompact</name>
      </method>
      <method>
        <name>withCloudSecureConnectBundle</name>
        <parameters>
          <type>java.io.File</type>
        </parameters>
      </method>
      <method>
        <name>withCloudSecureConnectBundle</name>
        <parameters>
          <type>java.net.URL</type>
        </parameters>
      </method>
      <method>
        <name>withCloudSecureConnectBundle</name>
        <parameters>
          <type>java.io.InputStream</type>
        </parameters>
      </method>
      <method>
        <name>getConfiguration</name>
      </method>
      <method>
        <name>getInitialListeners</name>
      </method>
      <method>
        <name>build</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.Metrics$Errors</className>
      <method>
        <name>getConnectionErrors</name>
      </method>
      <method>
        <name>getAuthenticationErrors</name>
      </method>
      <method>
        <name>getWriteTimeouts</name>
      </method>
      <method>
        <name>getReadTimeouts</name>
      </method>
      <method>
        <name>getUnavailables</name>
      </method>
      <method>
        <name>getClientTimeouts</name>
      </method>
      <method>
        <name>getOthers</name>
      </method>
      <method>
        <name>getRetries</name>
      </method>
      <method>
        <name>getRetriesOnReadTimeout</name>
      </method>
      <method>
        <name>getRetriesOnWriteTimeout</name>
      </method>
      <method>
        <name>getRetriesOnUnavailable</name>
      </method>
      <method>
        <name>getRetriesOnClientTimeout</name>
      </method>
      <method>
        <name>getRetriesOnConnectionError</name>
      </method>
      <method>
        <name>getRetriesOnOtherErrors</name>
      </method>
      <method>
        <name>getIgnores</name>
      </method>
      <method>
        <name>getIgnoresOnReadTimeout</name>
      </method>
      <method>
        <name>getIgnoresOnWriteTimeout</name>
      </method>
      <method>
        <name>getIgnoresOnUnavailable</name>
      </method>
      <method>
        <name>getIgnoresOnClientTimeout</name>
      </method>
      <method>
        <name>getIgnoresOnConnectionError</name>
      </method>
      <method>
        <name>getIgnoresOnOtherErrors</name>
      </method>
      <method>
        <name>getSpeculativeExecutions</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.KeyspaceMetadata</className>
      <method>
        <name>getName</name>
      </method>
      <method>
        <name>isDurableWrites</name>
      </method>
      <method>
        <name>isVirtual</name>
      </method>
      <method>
        <name>getReplication</name>
      </method>
      <method>
        <name>getTable</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getTables</name>
      </method>
      <method>
        <name>getMaterializedView</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getMaterializedViews</name>
      </method>
      <method>
        <name>getUserType</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getUserTypes</name>
      </method>
      <method>
        <name>getFunction</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.Collection&lt;com.datastax.driver.core.DataType&gt;</type>
        </parameters>
      </method>
      <method>
        <name>getFunction</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.DataType...</type>
        </parameters>
      </method>
      <method>
        <name>getFunctions</name>
      </method>
      <method>
        <name>getAggregate</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.util.Collection&lt;com.datastax.driver.core.DataType&gt;</type>
        </parameters>
      </method>
      <method>
        <name>getAggregate</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.DataType...</type>
        </parameters>
      </method>
      <method>
        <name>getAggregates</name>
      </method>
      <method>
        <name>exportAsString</name>
      </method>
      <method>
        <name>asCQLQuery</name>
      </method>
      <method>
        <name>toString</name>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>hashCode</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.TableOptions$CompactionOptions$TimeWindowCompactionStrategyOptions$TimeStampResolution</className>
      <method>
        <name>values</name>
      </method>
      <method>
        <name>valueOf</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.Create$Options</className>
      <method>
        <name>clusteringOrder</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.schemabuilder.SchemaBuilder$Direction</type>
        </parameters>
      </method>
      <method>
        <name>compactStorage</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.CreateType</className>
      <method>
        <name>build</name>
      </method>
      <method>
        <name>buildInternal</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.TableOptions$CompressionOptions</className>
      <method>
        <name>withChunkLengthInKb</name>
        <parameters>
          <type>java.lang.Integer</type>
        </parameters>
      </method>
      <method>
        <name>withCRCCheckChance</name>
        <parameters>
          <type>java.lang.Double</type>
        </parameters>
      </method>
      <method>
        <name>build</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.Create</className>
      <method>
        <name>addPartitionKey</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.DataType</type>
        </parameters>
      </method>
      <method>
        <name>addUDTPartitionKey</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.schemabuilder.UDTType</type>
        </parameters>
      </method>
      <method>
        <name>addClusteringColumn</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.DataType</type>
        </parameters>
      </method>
      <method>
        <name>addUDTClusteringColumn</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.schemabuilder.UDTType</type>
        </parameters>
      </method>
      <method>
        <name>addStaticColumn</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.DataType</type>
        </parameters>
      </method>
      <method>
        <name>addUDTStaticColumn</name>
        <parameters>
          <type>java.lang.String</type>
          <type>com.datastax.driver.core.schemabuilder.UDTType</type>
        </parameters>
      </method>
      <method>
        <name>withOptions</name>
      </method>
      <method>
        <name>buildInternal</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.SimpleStatement</className>
      <method>
        <name>getQueryString</name>
        <parameters>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getValues</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getNamedValues</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>valuesCount</name>
      </method>
      <method>
        <name>hasValues</name>
        <parameters>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>usesNamedValues</name>
      </method>
      <method>
        <name>getObject</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getObject</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>getValueNames</name>
      </method>
      <method>
        <name>getRoutingKey</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>setRoutingKey</name>
        <parameters>
          <type>java.nio.ByteBuffer</type>
        </parameters>
      </method>
      <method>
        <name>getKeyspace</name>
      </method>
      <method>
        <name>setKeyspace</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>setRoutingKey</name>
        <parameters>
          <type>java.nio.ByteBuffer...</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.DefaultPreparedStatement</className>
      <method>
        <name>getVariables</name>
      </method>
      <method>
        <name>bind</name>
        <parameters>
          <type>java.lang.Object...</type>
        </parameters>
      </method>
      <method>
        <name>bind</name>
      </method>
      <method>
        <name>setRoutingKey</name>
        <parameters>
          <type>java.nio.ByteBuffer</type>
        </parameters>
      </method>
      <method>
        <name>setRoutingKey</name>
        <parameters>
          <type>java.nio.ByteBuffer...</type>
        </parameters>
      </method>
      <method>
        <name>getRoutingKey</name>
      </method>
      <method>
        <name>setConsistencyLevel</name>
        <parameters>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
        </parameters>
      </method>
      <method>
        <name>getConsistencyLevel</name>
      </method>
      <method>
        <name>setSerialConsistencyLevel</name>
        <parameters>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
        </parameters>
      </method>
      <method>
        <name>getSerialConsistencyLevel</name>
      </method>
      <method>
        <name>getQueryString</name>
      </method>
      <method>
        <name>getQueryKeyspace</name>
      </method>
      <method>
        <name>enableTracing</name>
      </method>
      <method>
        <name>disableTracing</name>
      </method>
      <method>
        <name>isTracing</name>
      </method>
      <method>
        <name>setRetryPolicy</name>
        <parameters>
          <type>com.datastax.driver.core.policies.RetryPolicy</type>
        </parameters>
      </method>
      <method>
        <name>getRetryPolicy</name>
      </method>
      <method>
        <name>getPreparedId</name>
      </method>
      <method>
        <name>getIncomingPayload</name>
      </method>
      <method>
        <name>getOutgoingPayload</name>
      </method>
      <method>
        <name>setOutgoingPayload</name>
        <parameters>
          <type>java.util.Map&lt;java.lang.String</type>
          <type>java.nio.ByteBuffer&gt;</type>
        </parameters>
      </method>
      <method>
        <name>getCodecRegistry</name>
      </method>
      <method>
        <name>setIdempotent</name>
        <parameters>
          <type>java.lang.Boolean</type>
        </parameters>
      </method>
      <method>
        <name>isIdempotent</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.querybuilder.Batch$Options</className>
      <method>
        <name>and</name>
        <parameters>
          <type>com.datastax.driver.core.querybuilder.Using</type>
        </parameters>
      </method>
      <method>
        <name>add</name>
        <parameters>
          <type>com.datastax.driver.core.RegularStatement</type>
        </parameters>
      </method>
      <method>
        <name>toString</name>
      </method>
      <method>
        <name>hasValues</name>
      </method>
      <method>
        <name>getValues</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getRetryPolicy</name>
      </method>
      <method>
        <name>setRetryPolicy</name>
        <parameters>
          <type>com.datastax.driver.core.policies.RetryPolicy</type>
        </parameters>
      </method>
      <method>
        <name>isTracing</name>
      </method>
      <method>
        <name>disableTracing</name>
      </method>
      <method>
        <name>enableTracing</name>
      </method>
      <method>
        <name>getConsistencyLevel</name>
      </method>
      <method>
        <name>setConsistencyLevel</name>
        <parameters>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
        </parameters>
      </method>
      <method>
        <name>setForceNoValues</name>
        <parameters>
          <type>boolean</type>
        </parameters>
      </method>
      <method>
        <name>getKeyspace</name>
      </method>
      <method>
        <name>getRoutingKey</name>
        <parameters>
          <type>com.datastax.driver.core.ProtocolVersion</type>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
      <method>
        <name>getQueryString</name>
        <parameters>
          <type>com.datastax.driver.core.CodecRegistry</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.querybuilder.Select$SelectionOrAlias</className>
      <method>
        <name>as</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>all</name>
      </method>
      <method>
        <name>countAll</name>
      </method>
      <method>
        <name>column</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>writeTime</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>ttl</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>fcall</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.Object...</type>
        </parameters>
      </method>
      <method>
        <name>cast</name>
        <parameters>
          <type>java.lang.Object</type>
          <type>com.datastax.driver.core.DataType</type>
        </parameters>
      </method>
      <method>
        <name>raw</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>path</name>
        <parameters>
          <type>java.lang.String...</type>
        </parameters>
      </method>
      <method>
        <name>toJson</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>count</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>max</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>min</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>sum</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>avg</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>from</name>
        <parameters>
          <type>java.lang.String</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>from</name>
        <parameters>
          <type>com.datastax.driver.core.TableMetadata</type>
        </parameters>
      </method>
      <method>
        <name>from</name>
        <parameters>
          <type>com.datastax.driver.core.MaterializedViewMetadata</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.SniEndPointFactory</className>
      <method>
        <name>init</name>
        <parameters>
          <type>com.datastax.driver.core.Cluster</type>
        </parameters>
      </method>
      <method>
        <name>create</name>
        <parameters>
          <type>com.datastax.driver.core.Row</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.RemoteEndpointAwareJdkSSLOptions$Builder</className>
      <method>
        <name>withSSLContext</name>
        <parameters>
          <type>javax.net.ssl.SSLContext</type>
        </parameters>
      </method>
      <method>
        <name>withCipherSuites</name>
        <parameters>
          <type>java.lang.String[]</type>
        </parameters>
      </method>
      <method>
        <name>build</name>
      </method>
      <method>
        <name>build</name>
      </method>
      <method>
        <name>withCipherSuites</name>
        <parameters>
          <type>java.lang.String[]</type>
        </parameters>
      </method>
      <method>
        <name>withSSLContext</name>
        <parameters>
          <type>javax.net.ssl.SSLContext</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.ProtocolError</className>
      <method>
        <name>getEndPoint</name>
      </method>
      <method>
        <name>getAddress</name>
      </method>
      <method>
        <name>getHost</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.DriverException</className>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.ReadFailureException</className>
      <method>
        <name>getFailures</name>
      </method>
      <method>
        <name>getFailuresMap</name>
      </method>
      <method>
        <name>wasDataRetrieved</name>
      </method>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>copy</name>
        <parameters>
          <type>com.datastax.driver.core.EndPoint</type>
        </parameters>
      </method>
      <method>
        <name>copy</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.exceptions.InvalidQueryException</className>
      <method>
        <name>copy</name>
      </method>
      <method>
        <name>getEndPoint</name>
      </method>
      <method>
        <name>getAddress</name>
      </method>
      <method>
        <name>getHost</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.RetryPolicy$RetryDecision</className>
      <method>
        <name>getType</name>
      </method>
      <method>
        <name>getRetryConsistencyLevel</name>
      </method>
      <method>
        <name>isRetryCurrent</name>
      </method>
      <method>
        <name>rethrow</name>
      </method>
      <method>
        <name>retry</name>
        <parameters>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
        </parameters>
      </method>
      <method>
        <name>ignore</name>
      </method>
      <method>
        <name>tryNextHost</name>
        <parameters>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
        </parameters>
      </method>
      <method>
        <name>toString</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.LoggingRetryPolicy</className>
      <method>
        <name>onReadTimeout</name>
        <parameters>
          <type>com.datastax.driver.core.Statement</type>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
          <type>int</type>
          <type>int</type>
          <type>boolean</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>onWriteTimeout</name>
        <parameters>
          <type>com.datastax.driver.core.Statement</type>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
          <type>com.datastax.driver.core.WriteType</type>
          <type>int</type>
          <type>int</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>onUnavailable</name>
        <parameters>
          <type>com.datastax.driver.core.Statement</type>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
          <type>int</type>
          <type>int</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>onRequestError</name>
        <parameters>
          <type>com.datastax.driver.core.Statement</type>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
          <type>com.datastax.driver.core.exceptions.DriverException</type>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>init</name>
        <parameters>
          <type>com.datastax.driver.core.Cluster</type>
        </parameters>
      </method>
      <method>
        <name>close</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.policies.ErrorAwarePolicy$Builder</className>
      <method>
        <name>withMaxErrorsPerMinute</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>withRetryPeriod</name>
        <parameters>
          <type>long</type>
          <type>java.util.concurrent.TimeUnit</type>
        </parameters>
      </method>
      <method>
        <name>withErrorsFilter</name>
        <parameters>
          <type>com.datastax.driver.core.policies.ErrorAwarePolicy$ErrorFilter</type>
        </parameters>
      </method>
      <method>
        <name>build</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.QueryOptions</className>
      <method>
        <name>setConsistencyLevel</name>
        <parameters>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
        </parameters>
      </method>
      <method>
        <name>getConsistencyLevel</name>
      </method>
      <method>
        <name>setSerialConsistencyLevel</name>
        <parameters>
          <type>com.datastax.driver.core.ConsistencyLevel</type>
        </parameters>
      </method>
      <method>
        <name>getSerialConsistencyLevel</name>
      </method>
      <method>
        <name>setFetchSize</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getFetchSize</name>
      </method>
      <method>
        <name>setDefaultIdempotence</name>
        <parameters>
          <type>boolean</type>
        </parameters>
      </method>
      <method>
        <name>getDefaultIdempotence</name>
      </method>
      <method>
        <name>setPrepareOnAllHosts</name>
        <parameters>
          <type>boolean</type>
        </parameters>
      </method>
      <method>
        <name>isPrepareOnAllHosts</name>
      </method>
      <method>
        <name>setReprepareOnUp</name>
        <parameters>
          <type>boolean</type>
        </parameters>
      </method>
      <method>
        <name>isReprepareOnUp</name>
      </method>
      <method>
        <name>setMetadataEnabled</name>
        <parameters>
          <type>boolean</type>
        </parameters>
      </method>
      <method>
        <name>isMetadataEnabled</name>
      </method>
      <method>
        <name>setRefreshSchemaIntervalMillis</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getRefreshSchemaIntervalMillis</name>
      </method>
      <method>
        <name>setMaxPendingRefreshSchemaRequests</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getMaxPendingRefreshSchemaRequests</name>
      </method>
      <method>
        <name>setRefreshNodeListIntervalMillis</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getRefreshNodeListIntervalMillis</name>
      </method>
      <method>
        <name>setMaxPendingRefreshNodeListRequests</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getMaxPendingRefreshNodeListRequests</name>
      </method>
      <method>
        <name>setRefreshNodeIntervalMillis</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getRefreshNodeIntervalMillis</name>
      </method>
      <method>
        <name>setMaxPendingRefreshNodeRequests</name>
        <parameters>
          <type>int</type>
        </parameters>
      </method>
      <method>
        <name>getMaxPendingRefreshNodeRequests</name>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>hashCode</name>
      </method>
      <method>
        <name>isConsistencySet</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.IndexMetadata</className>
      <method>
        <name>getTable</name>
      </method>
      <method>
        <name>getName</name>
      </method>
      <method>
        <name>getKind</name>
      </method>
      <method>
        <name>getTarget</name>
      </method>
      <method>
        <name>isCustomIndex</name>
      </method>
      <method>
        <name>getIndexClassName</name>
      </method>
      <method>
        <name>getOption</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>asCQLQuery</name>
      </method>
      <method>
        <name>hashCode</name>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.PlainTextAuthProvider</className>
      <method>
        <name>setUsername</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>setPassword</name>
        <parameters>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>newAuthenticator</name>
        <parameters>
          <type>com.datastax.driver.core.EndPoint</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
      <method>
        <name>newAuthenticator</name>
        <parameters>
          <type>java.net.InetSocketAddress</type>
          <type>java.lang.String</type>
        </parameters>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.Host</className>
      <method>
        <name>getEndPoint</name>
      </method>
      <method>
        <name>getAddress</name>
      </method>
      <method>
        <name>getSocketAddress</name>
      </method>
      <method>
        <name>getBroadcastRpcAddress</name>
      </method>
      <method>
        <name>getBroadcastAddress</name>
      </method>
      <method>
        <name>getBroadcastSocketAddress</name>
      </method>
      <method>
        <name>getListenAddress</name>
      </method>
      <method>
        <name>getListenSocketAddress</name>
      </method>
      <method>
        <name>getDatacenter</name>
      </method>
      <method>
        <name>getRack</name>
      </method>
      <method>
        <name>getCassandraVersion</name>
      </method>
      <method>
        <name>getDseVersion</name>
      </method>
      <method>
        <name>getDseWorkload</name>
      </method>
      <method>
        <name>isDseGraphEnabled</name>
      </method>
      <method>
        <name>getHostId</name>
      </method>
      <method>
        <name>getSchemaVersion</name>
      </method>
      <method>
        <name>getTokens</name>
      </method>
      <method>
        <name>isUp</name>
      </method>
      <method>
        <name>getState</name>
      </method>
      <method>
        <name>getReconnectionAttemptFuture</name>
      </method>
      <method>
        <name>tryReconnectOnce</name>
      </method>
      <method>
        <name>equals</name>
        <parameters>
          <type>java.lang.Object</type>
        </parameters>
      </method>
      <method>
        <name>hashCode</name>
      </method>
      <method>
        <name>toString</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.TableOptions$CachingRowsPerPartition</className>
      <method>
        <name>value</name>
      </method>
    </pointcut>
    <pointcut transactionStartPoint="true">
      <className>com.datastax.driver.core.schemabuilder.UDTType</className>
      <method>
        <name>asCQLString</name>
      </method>
    </pointcut>
  </instrumentation>
</extension>
